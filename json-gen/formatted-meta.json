{
  "lookup": {
    "types": [
      {
        "id": "0",
        "type": {
          "path": [
            "sp_core",
            "crypto",
            "AccountId32"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "1",
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "1",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "32",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "2",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U8"
          },
          "docs": []
        }
      },
      {
        "id": "3",
        "type": {
          "path": [
            "frame_system",
            "AccountInfo"
          ],
          "params": [
            {
              "name": "Index",
              "type": "4"
            },
            {
              "name": "AccountData",
              "type": "5"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "nonce",
                  "type": "4",
                  "typeName": "Index",
                  "docs": []
                },
                {
                  "name": "consumers",
                  "type": "4",
                  "typeName": "RefCount",
                  "docs": []
                },
                {
                  "name": "providers",
                  "type": "4",
                  "typeName": "RefCount",
                  "docs": []
                },
                {
                  "name": "sufficients",
                  "type": "4",
                  "typeName": "RefCount",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": "5",
                  "typeName": "AccountData",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "4",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U32"
          },
          "docs": []
        }
      },
      {
        "id": "5",
        "type": {
          "path": [
            "pallet_balances",
            "AccountData"
          ],
          "params": [
            {
              "name": "Balance",
              "type": "6"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "free",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "reserved",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "misc_frozen",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "fee_frozen",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "6",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U128"
          },
          "docs": []
        }
      },
      {
        "id": "7",
        "type": {
          "path": [
            "frame_support",
            "weights",
            "PerDispatchClass"
          ],
          "params": [
            {
              "name": "T",
              "type": "8"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "normal",
                  "type": "8",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "operational",
                  "type": "8",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "mandatory",
                  "type": "8",
                  "typeName": "T",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "8",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U64"
          },
          "docs": []
        }
      },
      {
        "id": "9",
        "type": {
          "path": [
            "primitive_types",
            "H256"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "1",
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "10",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "11",
        "type": {
          "path": [
            "sp_runtime",
            "generic",
            "digest",
            "Digest"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "logs",
                  "type": "12",
                  "typeName": "Vec<DigestItem>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "12",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "13"
            }
          },
          "docs": []
        }
      },
      {
        "id": "13",
        "type": {
          "path": [
            "sp_runtime",
            "generic",
            "digest",
            "DigestItem"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "PreRuntime",
                  "fields": [
                    {
                      "name": null,
                      "type": "14",
                      "typeName": "ConsensusEngineId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "Consensus",
                  "fields": [
                    {
                      "name": null,
                      "type": "14",
                      "typeName": "ConsensusEngineId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Seal",
                  "fields": [
                    {
                      "name": null,
                      "type": "14",
                      "typeName": "ConsensusEngineId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Other",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "RuntimeEnvironmentUpdated",
                  "fields": [],
                  "index": "8",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "14",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "4",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "15",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "16"
            }
          },
          "docs": []
        }
      },
      {
        "id": "16",
        "type": {
          "path": [
            "frame_system",
            "EventRecord"
          ],
          "params": [
            {
              "name": "E",
              "type": "17"
            },
            {
              "name": "T",
              "type": "9"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "phase",
                  "type": "50",
                  "typeName": "Phase",
                  "docs": []
                },
                {
                  "name": "event",
                  "type": "17",
                  "typeName": "E",
                  "docs": []
                },
                {
                  "name": "topics",
                  "type": "51",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "17",
        "type": {
          "path": [
            "takumi_runtime",
            "Event"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "System",
                  "fields": [
                    {
                      "name": null,
                      "type": "18",
                      "typeName": "frame_system::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Balances",
                  "fields": [
                    {
                      "name": null,
                      "type": "27",
                      "typeName": "pallet_balances::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "ValidatorSet",
                  "fields": [
                    {
                      "name": null,
                      "type": "29",
                      "typeName": "pallet_validator_set::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Session",
                  "fields": [
                    {
                      "name": null,
                      "type": "30",
                      "typeName": "pallet_session::Event",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Grandpa",
                  "fields": [
                    {
                      "name": null,
                      "type": "31",
                      "typeName": "pallet_grandpa::Event",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "TransactionPayment",
                  "fields": [
                    {
                      "name": null,
                      "type": "36",
                      "typeName": "pallet_transaction_payment::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "Sudo",
                  "fields": [
                    {
                      "name": null,
                      "type": "37",
                      "typeName": "pallet_sudo::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "Utility",
                  "fields": [
                    {
                      "name": null,
                      "type": "41",
                      "typeName": "pallet_utility::Event",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "Spaces",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "pallet_spaces::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "13",
                  "docs": []
                },
                {
                  "name": "Tenants",
                  "fields": [
                    {
                      "name": null,
                      "type": "45",
                      "typeName": "pallet_tenants::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "14",
                  "docs": []
                },
                {
                  "name": "ContentObjectVersions",
                  "fields": [
                    {
                      "name": null,
                      "type": "47",
                      "typeName": "pallet_content::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "15",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "18",
        "type": {
          "path": [
            "frame_system",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "ExtrinsicSuccess",
                  "fields": [
                    {
                      "name": "dispatch_info",
                      "type": "19",
                      "typeName": "DispatchInfo",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "An extrinsic completed successfully."
                  ]
                },
                {
                  "name": "ExtrinsicFailed",
                  "fields": [
                    {
                      "name": "dispatch_error",
                      "type": "22",
                      "typeName": "DispatchError",
                      "docs": []
                    },
                    {
                      "name": "dispatch_info",
                      "type": "19",
                      "typeName": "DispatchInfo",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "An extrinsic failed."
                  ]
                },
                {
                  "name": "CodeUpdated",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "`:code` was updated."
                  ]
                },
                {
                  "name": "NewAccount",
                  "fields": [
                    {
                      "name": "account",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "A new account was created."
                  ]
                },
                {
                  "name": "KilledAccount",
                  "fields": [
                    {
                      "name": "account",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "An account was reaped."
                  ]
                },
                {
                  "name": "Remarked",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "hash",
                      "type": "9",
                      "typeName": "T::Hash",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "On on-chain remark happened."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Event for the System pallet."
          ]
        }
      },
      {
        "id": "19",
        "type": {
          "path": [
            "frame_support",
            "weights",
            "DispatchInfo"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "weight",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "class",
                  "type": "20",
                  "typeName": "DispatchClass",
                  "docs": []
                },
                {
                  "name": "pays_fee",
                  "type": "21",
                  "typeName": "Pays",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "20",
        "type": {
          "path": [
            "frame_support",
            "weights",
            "DispatchClass"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Normal",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Operational",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Mandatory",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "21",
        "type": {
          "path": [
            "frame_support",
            "weights",
            "Pays"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Yes",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "No",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "22",
        "type": {
          "path": [
            "sp_runtime",
            "DispatchError"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Other",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "CannotLookup",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "BadOrigin",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Module",
                  "fields": [
                    {
                      "name": null,
                      "type": "23",
                      "typeName": "ModuleError",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "ConsumerRemaining",
                  "fields": [],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "NoProviders",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "TooManyConsumers",
                  "fields": [],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "Token",
                  "fields": [
                    {
                      "name": null,
                      "type": "24",
                      "typeName": "TokenError",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "Arithmetic",
                  "fields": [
                    {
                      "name": null,
                      "type": "25",
                      "typeName": "ArithmeticError",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "Transactional",
                  "fields": [
                    {
                      "name": null,
                      "type": "26",
                      "typeName": "TransactionalError",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "23",
        "type": {
          "path": [
            "sp_runtime",
            "ModuleError"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "index",
                  "type": "2",
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "error",
                  "type": "14",
                  "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "24",
        "type": {
          "path": [
            "sp_runtime",
            "TokenError"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "NoFunds",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "WouldDie",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "BelowMinimum",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "CannotCreate",
                  "fields": [],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "UnknownAsset",
                  "fields": [],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Frozen",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Unsupported",
                  "fields": [],
                  "index": "6",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "25",
        "type": {
          "path": [
            "sp_runtime",
            "ArithmeticError"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Underflow",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Overflow",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "DivisionByZero",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "26",
        "type": {
          "path": [
            "sp_runtime",
            "TransactionalError"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "LimitReached",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "NoLayer",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "27",
        "type": {
          "path": [
            "pallet_balances",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Endowed",
                  "fields": [
                    {
                      "name": "account",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "free_balance",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "An account was created with some free balance."
                  ]
                },
                {
                  "name": "DustLost",
                  "fields": [
                    {
                      "name": "account",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                    "resulting in an outright loss."
                  ]
                },
                {
                  "name": "Transfer",
                  "fields": [
                    {
                      "name": "from",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Transfer succeeded."
                  ]
                },
                {
                  "name": "BalanceSet",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "free",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    },
                    {
                      "name": "reserved",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "A balance was set by root."
                  ]
                },
                {
                  "name": "Reserved",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Some balance was reserved (moved from free to reserved)."
                  ]
                },
                {
                  "name": "Unreserved",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Some balance was unreserved (moved from reserved to free)."
                  ]
                },
                {
                  "name": "ReserveRepatriated",
                  "fields": [
                    {
                      "name": "from",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    },
                    {
                      "name": "destination_status",
                      "type": "28",
                      "typeName": "Status",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": [
                    "Some balance was moved from the reserve of the first account to the second account.",
                    "Final argument indicates the destination balance type."
                  ]
                },
                {
                  "name": "Deposit",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": [
                    "Some amount was deposited (e.g. for transaction fees)."
                  ]
                },
                {
                  "name": "Withdraw",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": [
                    "Some amount was withdrawn from the account (e.g. for transaction fees)."
                  ]
                },
                {
                  "name": "Slashed",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": [
                    "Some amount was removed from the account (e.g. for misbehavior)."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "28",
        "type": {
          "path": [
            "frame_support",
            "traits",
            "tokens",
            "misc",
            "BalanceStatus"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Free",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Reserved",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "29",
        "type": {
          "path": [
            "pallet_validator_set",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "ValidatorAdditionInitiated",
                  "fields": [
                    {
                      "name": null,
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "New validator addition initiated. Effective in ~2 sessions."
                  ]
                },
                {
                  "name": "ValidatorRemovalInitiated",
                  "fields": [
                    {
                      "name": null,
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Validator removal initiated. Effective in ~2 sessions."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "30",
        "type": {
          "path": [
            "pallet_session",
            "pallet",
            "Event"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "NewSession",
                  "fields": [
                    {
                      "name": "session_index",
                      "type": "4",
                      "typeName": "SessionIndex",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "New session has happened. Note that the argument is the session index, not the",
                    "block number as the type might suggest."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "31",
        "type": {
          "path": [
            "pallet_grandpa",
            "pallet",
            "Event"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "NewAuthorities",
                  "fields": [
                    {
                      "name": "authority_set",
                      "type": "32",
                      "typeName": "AuthorityList",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "New authority set has been applied."
                  ]
                },
                {
                  "name": "Paused",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Current authority set has been paused."
                  ]
                },
                {
                  "name": "Resumed",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Current authority set has been resumed."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "32",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "33"
            }
          },
          "docs": []
        }
      },
      {
        "id": "33",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "34",
              "8"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "34",
        "type": {
          "path": [
            "sp_finality_grandpa",
            "app",
            "Public"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "35",
                  "typeName": "ed25519::Public",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "35",
        "type": {
          "path": [
            "sp_core",
            "ed25519",
            "Public"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "1",
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "36",
        "type": {
          "path": [
            "pallet_transaction_payment",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "TransactionFeePaid",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "actual_fee",
                      "type": "6",
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "tip",
                      "type": "6",
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                    "has been paid by `who`."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "37",
        "type": {
          "path": [
            "pallet_sudo",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Sudid",
                  "fields": [
                    {
                      "name": "sudo_result",
                      "type": "38",
                      "typeName": "DispatchResult",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "A sudo just took place. \\[result\\]"
                  ]
                },
                {
                  "name": "KeyChanged",
                  "fields": [
                    {
                      "name": "old_sudoer",
                      "type": "40",
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "The \\[sudoer\\] just switched identity; the old key is supplied if one existed."
                  ]
                },
                {
                  "name": "SudoAsDone",
                  "fields": [
                    {
                      "name": "sudo_result",
                      "type": "38",
                      "typeName": "DispatchResult",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "A sudo just took place. \\[result\\]"
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "38",
        "type": {
          "path": [
            "Result"
          ],
          "params": [
            {
              "name": "T",
              "type": "39"
            },
            {
              "name": "E",
              "type": "22"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Ok",
                  "fields": [
                    {
                      "name": null,
                      "type": "39",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Err",
                  "fields": [
                    {
                      "name": null,
                      "type": "22",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "39",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": []
          },
          "docs": []
        }
      },
      {
        "id": "40",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "0"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "0",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "41",
        "type": {
          "path": [
            "pallet_utility",
            "pallet",
            "Event"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "BatchInterrupted",
                  "fields": [
                    {
                      "name": "index",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "error",
                      "type": "22",
                      "typeName": "DispatchError",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                    "well as the error."
                  ]
                },
                {
                  "name": "BatchCompleted",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Batch of dispatches completed fully with no error."
                  ]
                },
                {
                  "name": "BatchCompletedWithErrors",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Batch of dispatches completed but has errors."
                  ]
                },
                {
                  "name": "ItemCompleted",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "A single item within a Batch of dispatches has completed with no error."
                  ]
                },
                {
                  "name": "ItemFailed",
                  "fields": [
                    {
                      "name": "error",
                      "type": "22",
                      "typeName": "DispatchError",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "A single item within a Batch of dispatches has completed with error."
                  ]
                },
                {
                  "name": "DispatchedAs",
                  "fields": [
                    {
                      "name": "result",
                      "type": "38",
                      "typeName": "DispatchResult",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "A call was dispatched."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "42",
        "type": {
          "path": [
            "pallet_spaces",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "SpaceCreated",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::SpaceId",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "43",
        "type": {
          "path": [
            "takumi_common",
            "hash",
            "H80"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "44",
                  "typeName": "[u8; 10]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "44",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "10",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "45",
        "type": {
          "path": [
            "pallet_tenants",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "TenantCreated",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::SpaceId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "46",
                      "typeName": "TenantRole",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "TenantDeleted",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::SpaceId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "KMSAdded",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::KMSId",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "KMSRemoved",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::KMSId",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "NodeAdded",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::NodeId",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "NodeConfirmed",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::NodeId",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "NodeRemoved",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::NodeId",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "46",
        "type": {
          "path": [
            "takumi_common",
            "permission",
            "TenantRole"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Normal",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Provider",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "47",
        "type": {
          "path": [
            "pallet_content",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "VersionAdded",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::ContentObjectId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "9",
                      "typeName": "T::VersionId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "48",
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "CurrentVersionSet",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::ContentObjectId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "49",
                      "typeName": "Option<T::VersionId>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "VersionDeleted",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::ContentObjectId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "9",
                      "typeName": "T::VersionId",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "AllVersionsDeleted",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "T::ContentObjectId",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "48",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "Bool"
          },
          "docs": []
        }
      },
      {
        "id": "49",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "9"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "9",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "50",
        "type": {
          "path": [
            "frame_system",
            "Phase"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "ApplyExtrinsic",
                  "fields": [
                    {
                      "name": null,
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Finalization",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Initialization",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "51",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "9"
            }
          },
          "docs": []
        }
      },
      {
        "id": "52",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "53"
            }
          },
          "docs": []
        }
      },
      {
        "id": "53",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "4",
              "4"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "54",
        "type": {
          "path": [
            "frame_system",
            "LastRuntimeUpgradeInfo"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "spec_version",
                  "type": "55",
                  "typeName": "codec::Compact<u32>",
                  "docs": []
                },
                {
                  "name": "spec_name",
                  "type": "56",
                  "typeName": "sp_runtime::RuntimeString",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "55",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Compact": {
              "type": "4"
            }
          },
          "docs": []
        }
      },
      {
        "id": "56",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "Str"
          },
          "docs": []
        }
      },
      {
        "id": "57",
        "type": {
          "path": [
            "frame_system",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "fill_block",
                  "fields": [
                    {
                      "name": "ratio",
                      "type": "58",
                      "typeName": "Perbill",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "A dispatch that will fill the block weight up to the given ratio."
                  ]
                },
                {
                  "name": "remark",
                  "fields": [
                    {
                      "name": "remark",
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Make some on-chain remark.",
                    "",
                    "# <weight>",
                    "- `O(1)`",
                    "# </weight>"
                  ]
                },
                {
                  "name": "set_heap_pages",
                  "fields": [
                    {
                      "name": "pages",
                      "type": "8",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Set the number of pages in the WebAssembly environment's heap."
                  ]
                },
                {
                  "name": "set_code",
                  "fields": [
                    {
                      "name": "code",
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Set the new runtime code.",
                    "",
                    "# <weight>",
                    "- `O(C + S)` where `C` length of `code` and `S` complexity of `can_set_code`",
                    "- 1 call to `can_set_code`: `O(S)` (calls `sp_io::misc::runtime_version` which is",
                    "  expensive).",
                    "- 1 storage write (codec `O(C)`).",
                    "- 1 digest item.",
                    "- 1 event.",
                    "The weight of this function is dependent on the runtime, but generally this is very",
                    "expensive. We will treat this as a full block.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "set_code_without_checks",
                  "fields": [
                    {
                      "name": "code",
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Set the new runtime code without doing any checks of the given `code`.",
                    "",
                    "# <weight>",
                    "- `O(C)` where `C` length of `code`",
                    "- 1 storage write (codec `O(C)`).",
                    "- 1 digest item.",
                    "- 1 event.",
                    "The weight of this function is dependent on the runtime. We will treat this as a full",
                    "block. # </weight>"
                  ]
                },
                {
                  "name": "set_storage",
                  "fields": [
                    {
                      "name": "items",
                      "type": "59",
                      "typeName": "Vec<KeyValue>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Set some items of storage."
                  ]
                },
                {
                  "name": "kill_storage",
                  "fields": [
                    {
                      "name": "keys",
                      "type": "61",
                      "typeName": "Vec<Key>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": [
                    "Kill some items from storage."
                  ]
                },
                {
                  "name": "kill_prefix",
                  "fields": [
                    {
                      "name": "prefix",
                      "type": "10",
                      "typeName": "Key",
                      "docs": []
                    },
                    {
                      "name": "subkeys",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": [
                    "Kill all storage items with a key that starts with the given prefix.",
                    "",
                    "**NOTE:** We rely on the Root origin to provide us the number of subkeys under",
                    "the prefix we are removing to accurately calculate the weight of this function."
                  ]
                },
                {
                  "name": "remark_with_event",
                  "fields": [
                    {
                      "name": "remark",
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": [
                    "Make some on-chain remark and emit event."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "58",
        "type": {
          "path": [
            "sp_arithmetic",
            "per_things",
            "Perbill"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "59",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "60"
            }
          },
          "docs": []
        }
      },
      {
        "id": "60",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "10",
              "10"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "61",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "10"
            }
          },
          "docs": []
        }
      },
      {
        "id": "62",
        "type": {
          "path": [
            "frame_system",
            "limits",
            "BlockWeights"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "base_block",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "max_block",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "per_class",
                  "type": "63",
                  "typeName": "PerDispatchClass<WeightsPerClass>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "63",
        "type": {
          "path": [
            "frame_support",
            "weights",
            "PerDispatchClass"
          ],
          "params": [
            {
              "name": "T",
              "type": "64"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "normal",
                  "type": "64",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "operational",
                  "type": "64",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "mandatory",
                  "type": "64",
                  "typeName": "T",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "64",
        "type": {
          "path": [
            "frame_system",
            "limits",
            "WeightsPerClass"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "base_extrinsic",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "max_extrinsic",
                  "type": "65",
                  "typeName": "Option<Weight>",
                  "docs": []
                },
                {
                  "name": "max_total",
                  "type": "65",
                  "typeName": "Option<Weight>",
                  "docs": []
                },
                {
                  "name": "reserved",
                  "type": "65",
                  "typeName": "Option<Weight>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "65",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "8"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "8",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "66",
        "type": {
          "path": [
            "frame_system",
            "limits",
            "BlockLength"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "max",
                  "type": "67",
                  "typeName": "PerDispatchClass<u32>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "67",
        "type": {
          "path": [
            "frame_support",
            "weights",
            "PerDispatchClass"
          ],
          "params": [
            {
              "name": "T",
              "type": "4"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "normal",
                  "type": "4",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "operational",
                  "type": "4",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "mandatory",
                  "type": "4",
                  "typeName": "T",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "68",
        "type": {
          "path": [
            "frame_support",
            "weights",
            "RuntimeDbWeight"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "read",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "write",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "69",
        "type": {
          "path": [
            "sp_version",
            "RuntimeVersion"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "spec_name",
                  "type": "56",
                  "typeName": "RuntimeString",
                  "docs": []
                },
                {
                  "name": "impl_name",
                  "type": "56",
                  "typeName": "RuntimeString",
                  "docs": []
                },
                {
                  "name": "authoring_version",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "spec_version",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "impl_version",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "apis",
                  "type": "70",
                  "typeName": "ApisVec",
                  "docs": []
                },
                {
                  "name": "transaction_version",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "state_version",
                  "type": "2",
                  "typeName": "u8",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "70",
        "type": {
          "path": [
            "Cow"
          ],
          "params": [
            {
              "name": "T",
              "type": "71"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "71",
                  "typeName": null,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "71",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "72"
            }
          },
          "docs": []
        }
      },
      {
        "id": "72",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "73",
              "4"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "73",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "8",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "74",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U16"
          },
          "docs": []
        }
      },
      {
        "id": "75",
        "type": {
          "path": [
            "frame_system",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InvalidSpecName",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "The name of specification does not match between the current runtime",
                    "and the new runtime."
                  ]
                },
                {
                  "name": "SpecVersionNeedsToIncrease",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "The specification version is not allowed to decrease between the current runtime",
                    "and the new runtime."
                  ]
                },
                {
                  "name": "FailedToExtractRuntimeVersion",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Failed to extract the runtime version from the new runtime.",
                    "",
                    "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                  ]
                },
                {
                  "name": "NonDefaultComposite",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "Suicide called when the account has non-default composite data."
                  ]
                },
                {
                  "name": "NonZeroRefCount",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "There is a non-zero reference count preventing the account from being purged."
                  ]
                },
                {
                  "name": "CallFiltered",
                  "fields": [],
                  "index": "5",
                  "docs": [
                    "The origin filter prevent the call to be dispatched."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Error for the System pallet"
          ]
        }
      },
      {
        "id": "76",
        "type": {
          "path": [
            "sp_runtime",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "9"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "51",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "77",
        "type": {
          "path": [
            "pallet_timestamp",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "set",
                  "fields": [
                    {
                      "name": "now",
                      "type": "78",
                      "typeName": "T::Moment",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Set the current time.",
                    "",
                    "This call should be invoked exactly once per block. It will panic at the finalization",
                    "phase, if this call hasn't been invoked by that time.",
                    "",
                    "The timestamp should be greater than the previous one by the amount specified by",
                    "`MinimumPeriod`.",
                    "",
                    "The dispatch origin for this call must be `Inherent`.",
                    "",
                    "# <weight>",
                    "- `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)",
                    "- 1 storage read and 1 storage mutation (codec `O(1)`). (because of `DidUpdate::take` in",
                    "  `on_finalize`)",
                    "- 1 event handler `on_timestamp_set`. Must be `O(1)`.",
                    "# </weight>"
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "78",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Compact": {
              "type": "8"
            }
          },
          "docs": []
        }
      },
      {
        "id": "79",
        "type": {
          "path": [
            "sp_runtime",
            "bounded",
            "weak_bounded_vec",
            "WeakBoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "80"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "82",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "80",
        "type": {
          "path": [
            "pallet_balances",
            "BalanceLock"
          ],
          "params": [
            {
              "name": "Balance",
              "type": "6"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "id",
                  "type": "73",
                  "typeName": "LockIdentifier",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "reasons",
                  "type": "81",
                  "typeName": "Reasons",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "81",
        "type": {
          "path": [
            "pallet_balances",
            "Reasons"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Fee",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Misc",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "All",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "82",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "80"
            }
          },
          "docs": []
        }
      },
      {
        "id": "83",
        "type": {
          "path": [
            "sp_runtime",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "84"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "86",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "84",
        "type": {
          "path": [
            "pallet_balances",
            "ReserveData"
          ],
          "params": [
            {
              "name": "ReserveIdentifier",
              "type": "85"
            },
            {
              "name": "Balance",
              "type": "6"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "id",
                  "type": "85",
                  "typeName": "ReserveIdentifier",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "85",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "14",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "86",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "84"
            }
          },
          "docs": []
        }
      },
      {
        "id": "87",
        "type": {
          "path": [
            "pallet_balances",
            "Releases"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "V1_0_0",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "V2_0_0",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "88",
        "type": {
          "path": [
            "pallet_balances",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "transfer",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "89",
                      "typeName": "<T::Lookup as StaticLookup>::Source",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": "92",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Transfer some liquid free balance to another account.",
                    "",
                    "`transfer` will set the `FreeBalance` of the sender and receiver.",
                    "If the sender's account is below the existential deposit as a result",
                    "of the transfer, the account will be reaped.",
                    "",
                    "The dispatch origin for this call must be `Signed` by the transactor.",
                    "",
                    "# <weight>",
                    "- Dependent on arguments but not critical, given proper implementations for input config",
                    "  types. See related functions below.",
                    "- It contains a limited number of reads and writes internally and no complex",
                    "  computation.",
                    "",
                    "Related functions:",
                    "",
                    "  - `ensure_can_withdraw` is always called internally but has a bounded complexity.",
                    "  - Transferring balances to accounts that did not exist before will cause",
                    "    `T::OnNewAccount::on_new_account` to be called.",
                    "  - Removing enough funds from an account will trigger `T::DustRemoval::on_unbalanced`.",
                    "  - `transfer_keep_alive` works the same way as `transfer`, but has an additional check",
                    "    that the transfer will not kill the origin account.",
                    "---------------------------------",
                    "- Origin account is already in memory, so no DB operations for them.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "set_balance",
                  "fields": [
                    {
                      "name": "who",
                      "type": "89",
                      "typeName": "<T::Lookup as StaticLookup>::Source",
                      "docs": []
                    },
                    {
                      "name": "new_free",
                      "type": "92",
                      "typeName": "T::Balance",
                      "docs": []
                    },
                    {
                      "name": "new_reserved",
                      "type": "92",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Set the balances of a given account.",
                    "",
                    "This will alter `FreeBalance` and `ReservedBalance` in storage. it will",
                    "also alter the total issuance of the system (`TotalIssuance`) appropriately.",
                    "If the new free or reserved balance is below the existential deposit,",
                    "it will reset the account nonce (`frame_system::AccountNonce`).",
                    "",
                    "The dispatch origin for this call is `root`."
                  ]
                },
                {
                  "name": "force_transfer",
                  "fields": [
                    {
                      "name": "source",
                      "type": "89",
                      "typeName": "<T::Lookup as StaticLookup>::Source",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "89",
                      "typeName": "<T::Lookup as StaticLookup>::Source",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": "92",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Exactly as `transfer`, except the origin must be root and the source account may be",
                    "specified.",
                    "# <weight>",
                    "- Same as transfer, but additional read and write because the source account is not",
                    "  assumed to be in the overlay.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "transfer_keep_alive",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "89",
                      "typeName": "<T::Lookup as StaticLookup>::Source",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": "92",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Same as the [`transfer`] call, but with a check that the transfer will not kill the",
                    "origin account.",
                    "",
                    "99% of the time you want [`transfer`] instead.",
                    "",
                    "[`transfer`]: struct.Pallet.html#method.transfer"
                  ]
                },
                {
                  "name": "transfer_all",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "89",
                      "typeName": "<T::Lookup as StaticLookup>::Source",
                      "docs": []
                    },
                    {
                      "name": "keep_alive",
                      "type": "48",
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Transfer the entire transferable balance from the caller account.",
                    "",
                    "NOTE: This function only attempts to transfer _transferable_ balances. This means that",
                    "any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be",
                    "transferred by this function. To ensure that this function results in a killed account,",
                    "you might need to prepare the account by removing any reference counters, storage",
                    "deposits, etc...",
                    "",
                    "The dispatch origin of this call must be Signed.",
                    "",
                    "- `dest`: The recipient of the transfer.",
                    "- `keep_alive`: A boolean to determine if the `transfer_all` operation should send all",
                    "  of the funds the account has, causing the sender account to be killed (false), or",
                    "  transfer everything except at least the existential deposit, which will guarantee to",
                    "  keep the sender account alive (true). # <weight>",
                    "- O(1). Just like transfer, but reading the user's transferable balance first.",
                    "  #</weight>"
                  ]
                },
                {
                  "name": "force_unreserve",
                  "fields": [
                    {
                      "name": "who",
                      "type": "89",
                      "typeName": "<T::Lookup as StaticLookup>::Source",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Unreserve some balance from a user by force.",
                    "",
                    "Can only be called by ROOT."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "89",
        "type": {
          "path": [
            "sp_runtime",
            "multiaddress",
            "MultiAddress"
          ],
          "params": [
            {
              "name": "AccountId",
              "type": "0"
            },
            {
              "name": "AccountIndex",
              "type": "39"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Id",
                  "fields": [
                    {
                      "name": null,
                      "type": "0",
                      "typeName": "AccountId",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Index",
                  "fields": [
                    {
                      "name": null,
                      "type": "90",
                      "typeName": "AccountIndex",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Raw",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Address32",
                  "fields": [
                    {
                      "name": null,
                      "type": "1",
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "Address20",
                  "fields": [
                    {
                      "name": null,
                      "type": "91",
                      "typeName": "[u8; 20]",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "90",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Compact": {
              "type": "39"
            }
          },
          "docs": []
        }
      },
      {
        "id": "91",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "20",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "92",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Compact": {
              "type": "6"
            }
          },
          "docs": []
        }
      },
      {
        "id": "93",
        "type": {
          "path": [
            "pallet_balances",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "VestingBalance",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Vesting balance too high to send value"
                  ]
                },
                {
                  "name": "LiquidityRestrictions",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Account liquidity restrictions prevent withdrawal"
                  ]
                },
                {
                  "name": "InsufficientBalance",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Balance too low to send value"
                  ]
                },
                {
                  "name": "ExistentialDeposit",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "Value too low to create account due to existential deposit"
                  ]
                },
                {
                  "name": "KeepAlive",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "Transfer/payment would kill account"
                  ]
                },
                {
                  "name": "ExistingVestingSchedule",
                  "fields": [],
                  "index": "5",
                  "docs": [
                    "A vesting schedule already exists for this account"
                  ]
                },
                {
                  "name": "DeadAccount",
                  "fields": [],
                  "index": "6",
                  "docs": [
                    "Beneficiary account must pre-exist"
                  ]
                },
                {
                  "name": "TooManyReserves",
                  "fields": [],
                  "index": "7",
                  "docs": [
                    "Number of named reserves exceed MaxReserves"
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "94",
        "type": {
          "path": [
            "sp_runtime",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "0"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "95",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "95",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "0"
            }
          },
          "docs": []
        }
      },
      {
        "id": "96",
        "type": {
          "path": [
            "pallet_validator_set",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "add_validator",
                  "fields": [
                    {
                      "name": "validator_id",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Add a new validator.",
                    "",
                    "New validator's session keys should be set in Session pallet before",
                    "calling this.",
                    "",
                    "The origin can be configured using the `AddRemoveOrigin` type in the",
                    "host runtime. Can also be set to sudo/root."
                  ]
                },
                {
                  "name": "remove_validator",
                  "fields": [
                    {
                      "name": "validator_id",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Remove a validator.",
                    "",
                    "The origin can be configured using the `AddRemoveOrigin` type in the",
                    "host runtime. Can also be set to sudo/root."
                  ]
                },
                {
                  "name": "add_validator_again",
                  "fields": [
                    {
                      "name": "validator_id",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Add an approved validator again when it comes back online.",
                    "",
                    "For this call, the dispatch origin must be the validator itself."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "97",
        "type": {
          "path": [
            "pallet_validator_set",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "TooFewValidators",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Target (post-removal) validator count is below the minimum."
                  ]
                },
                {
                  "name": "TooManyValidators",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "The number of validators is above the maximum."
                  ]
                },
                {
                  "name": "Duplicate",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Validator is already in the validator set."
                  ]
                },
                {
                  "name": "ValidatorNotApproved",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "Validator is not approved for re-addition."
                  ]
                },
                {
                  "name": "BadOrigin",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "Only the validator can add itself back after coming online."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "98",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "99"
            }
          },
          "docs": []
        }
      },
      {
        "id": "99",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "0",
              "100"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "100",
        "type": {
          "path": [
            "takumi_runtime",
            "opaque",
            "SessionKeys"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "aura",
                  "type": "101",
                  "typeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public",
                  "docs": []
                },
                {
                  "name": "grandpa",
                  "type": "34",
                  "typeName": "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "101",
        "type": {
          "path": [
            "sp_consensus_aura",
            "sr25519",
            "app_sr25519",
            "Public"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "102",
                  "typeName": "sr25519::Public",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "102",
        "type": {
          "path": [
            "sp_core",
            "sr25519",
            "Public"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "1",
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "103",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "4"
            }
          },
          "docs": []
        }
      },
      {
        "id": "104",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "105",
              "10"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "105",
        "type": {
          "path": [
            "sp_core",
            "crypto",
            "KeyTypeId"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "14",
                  "typeName": "[u8; 4]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "106",
        "type": {
          "path": [
            "pallet_session",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "set_keys",
                  "fields": [
                    {
                      "name": "keys",
                      "type": "100",
                      "typeName": "T::Keys",
                      "docs": []
                    },
                    {
                      "name": "proof",
                      "type": "10",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Sets the session key(s) of the function caller to `keys`.",
                    "Allows an account to set its session key prior to becoming a validator.",
                    "This doesn't take effect until the next session.",
                    "",
                    "The dispatch origin of this function must be signed.",
                    "",
                    "# <weight>",
                    "- Complexity: `O(1)`. Actual cost depends on the number of length of",
                    "  `T::Keys::key_ids()` which is fixed.",
                    "- DbReads: `origin account`, `T::ValidatorIdOf`, `NextKeys`",
                    "- DbWrites: `origin account`, `NextKeys`",
                    "- DbReads per key id: `KeyOwner`",
                    "- DbWrites per key id: `KeyOwner`",
                    "# </weight>"
                  ]
                },
                {
                  "name": "purge_keys",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Removes any session key(s) of the function caller.",
                    "",
                    "This doesn't take effect until the next session.",
                    "",
                    "The dispatch origin of this function must be Signed and the account must be either be",
                    "convertible to a validator ID using the chain's typical addressing system (this usually",
                    "means being a controller account) or directly convertible into a validator ID (which",
                    "usually means being a stash account).",
                    "",
                    "# <weight>",
                    "- Complexity: `O(1)` in number of key types. Actual cost depends on the number of length",
                    "  of `T::Keys::key_ids()` which is fixed.",
                    "- DbReads: `T::ValidatorIdOf`, `NextKeys`, `origin account`",
                    "- DbWrites: `NextKeys`, `origin account`",
                    "- DbWrites per key id: `KeyOwner`",
                    "# </weight>"
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "107",
        "type": {
          "path": [
            "pallet_session",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InvalidProof",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Invalid ownership proof."
                  ]
                },
                {
                  "name": "NoAssociatedValidatorId",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "No associated validator ID for account."
                  ]
                },
                {
                  "name": "DuplicatedKey",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Registered duplicate key."
                  ]
                },
                {
                  "name": "NoKeys",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "No keys are associated with this account."
                  ]
                },
                {
                  "name": "NoAccount",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "Key setting account is not live, so it's impossible to associate keys."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Error for the session pallet."
          ]
        }
      },
      {
        "id": "108",
        "type": {
          "path": [
            "sp_runtime",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "101"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "109",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "109",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "101"
            }
          },
          "docs": []
        }
      },
      {
        "id": "110",
        "type": {
          "path": [
            "sp_consensus_slots",
            "Slot"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "8",
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "111",
        "type": {
          "path": [
            "pallet_grandpa",
            "StoredState"
          ],
          "params": [
            {
              "name": "N",
              "type": "4"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Live",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "PendingPause",
                  "fields": [
                    {
                      "name": "scheduled_at",
                      "type": "4",
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "type": "4",
                      "typeName": "N",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Paused",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "PendingResume",
                  "fields": [
                    {
                      "name": "scheduled_at",
                      "type": "4",
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "type": "4",
                      "typeName": "N",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "112",
        "type": {
          "path": [
            "pallet_grandpa",
            "StoredPendingChange"
          ],
          "params": [
            {
              "name": "N",
              "type": "4"
            },
            {
              "name": "Limit",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "scheduled_at",
                  "type": "4",
                  "typeName": "N",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": "4",
                  "typeName": "N",
                  "docs": []
                },
                {
                  "name": "next_authorities",
                  "type": "113",
                  "typeName": "BoundedAuthorityList<Limit>",
                  "docs": []
                },
                {
                  "name": "forced",
                  "type": "114",
                  "typeName": "Option<N>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "113",
        "type": {
          "path": [
            "sp_runtime",
            "bounded",
            "weak_bounded_vec",
            "WeakBoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "33"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "32",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "114",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "4"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "4",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "115",
        "type": {
          "path": [
            "pallet_grandpa",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "report_equivocation",
                  "fields": [
                    {
                      "name": "equivocation_proof",
                      "type": "116",
                      "typeName": "Box<EquivocationProof<T::Hash, T::BlockNumber>>",
                      "docs": []
                    },
                    {
                      "name": "key_owner_proof",
                      "type": "127",
                      "typeName": "T::KeyOwnerProof",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Report voter equivocation/misbehavior. This method will verify the",
                    "equivocation proof and validate the given key ownership proof",
                    "against the extracted offender. If both are valid, the offence",
                    "will be reported."
                  ]
                },
                {
                  "name": "report_equivocation_unsigned",
                  "fields": [
                    {
                      "name": "equivocation_proof",
                      "type": "116",
                      "typeName": "Box<EquivocationProof<T::Hash, T::BlockNumber>>",
                      "docs": []
                    },
                    {
                      "name": "key_owner_proof",
                      "type": "127",
                      "typeName": "T::KeyOwnerProof",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Report voter equivocation/misbehavior. This method will verify the",
                    "equivocation proof and validate the given key ownership proof",
                    "against the extracted offender. If both are valid, the offence",
                    "will be reported.",
                    "",
                    "This extrinsic must be called unsigned and it is expected that only",
                    "block authors will call it (validated in `ValidateUnsigned`), as such",
                    "if the block author is defined it will be defined as the equivocation",
                    "reporter."
                  ]
                },
                {
                  "name": "note_stalled",
                  "fields": [
                    {
                      "name": "delay",
                      "type": "4",
                      "typeName": "T::BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "best_finalized_block_number",
                      "type": "4",
                      "typeName": "T::BlockNumber",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Note that the current authority set of the GRANDPA finality gadget has stalled.",
                    "",
                    "This will trigger a forced authority set change at the beginning of the next session, to",
                    "be enacted `delay` blocks after that. The `delay` should be high enough to safely assume",
                    "that the block signalling the forced change will not be re-orged e.g. 1000 blocks.",
                    "The block production rate (which may be slowed down because of finality lagging) should",
                    "be taken into account when choosing the `delay`. The GRANDPA voters based on the new",
                    "authority will start voting on top of `best_finalized_block_number` for new finalized",
                    "blocks. `best_finalized_block_number` should be the highest of the latest finalized",
                    "block of all validators of the new authority set.",
                    "",
                    "Only callable by root."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "116",
        "type": {
          "path": [
            "sp_finality_grandpa",
            "EquivocationProof"
          ],
          "params": [
            {
              "name": "H",
              "type": "9"
            },
            {
              "name": "N",
              "type": "4"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "set_id",
                  "type": "8",
                  "typeName": "SetId",
                  "docs": []
                },
                {
                  "name": "equivocation",
                  "type": "117",
                  "typeName": "Equivocation<H, N>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "117",
        "type": {
          "path": [
            "sp_finality_grandpa",
            "Equivocation"
          ],
          "params": [
            {
              "name": "H",
              "type": "9"
            },
            {
              "name": "N",
              "type": "4"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Prevote",
                  "fields": [
                    {
                      "name": null,
                      "type": "118",
                      "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Precommit",
                  "fields": [
                    {
                      "name": null,
                      "type": "124",
                      "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "118",
        "type": {
          "path": [
            "finality_grandpa",
            "Equivocation"
          ],
          "params": [
            {
              "name": "Id",
              "type": "34"
            },
            {
              "name": "V",
              "type": "119"
            },
            {
              "name": "S",
              "type": "120"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "round_number",
                  "type": "8",
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "identity",
                  "type": "34",
                  "typeName": "Id",
                  "docs": []
                },
                {
                  "name": "first",
                  "type": "123",
                  "typeName": "(V, S)",
                  "docs": []
                },
                {
                  "name": "second",
                  "type": "123",
                  "typeName": "(V, S)",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "119",
        "type": {
          "path": [
            "finality_grandpa",
            "Prevote"
          ],
          "params": [
            {
              "name": "H",
              "type": "9"
            },
            {
              "name": "N",
              "type": "4"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "target_hash",
                  "type": "9",
                  "typeName": "H",
                  "docs": []
                },
                {
                  "name": "target_number",
                  "type": "4",
                  "typeName": "N",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "120",
        "type": {
          "path": [
            "sp_finality_grandpa",
            "app",
            "Signature"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "121",
                  "typeName": "ed25519::Signature",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "121",
        "type": {
          "path": [
            "sp_core",
            "ed25519",
            "Signature"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "122",
                  "typeName": "[u8; 64]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "122",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "64",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "123",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "119",
              "120"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "124",
        "type": {
          "path": [
            "finality_grandpa",
            "Equivocation"
          ],
          "params": [
            {
              "name": "Id",
              "type": "34"
            },
            {
              "name": "V",
              "type": "125"
            },
            {
              "name": "S",
              "type": "120"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "round_number",
                  "type": "8",
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "identity",
                  "type": "34",
                  "typeName": "Id",
                  "docs": []
                },
                {
                  "name": "first",
                  "type": "126",
                  "typeName": "(V, S)",
                  "docs": []
                },
                {
                  "name": "second",
                  "type": "126",
                  "typeName": "(V, S)",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "125",
        "type": {
          "path": [
            "finality_grandpa",
            "Precommit"
          ],
          "params": [
            {
              "name": "H",
              "type": "9"
            },
            {
              "name": "N",
              "type": "4"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "target_hash",
                  "type": "9",
                  "typeName": "H",
                  "docs": []
                },
                {
                  "name": "target_number",
                  "type": "4",
                  "typeName": "N",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "126",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "125",
              "120"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "127",
        "type": {
          "path": [
            "sp_core",
            "Void"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "128",
        "type": {
          "path": [
            "pallet_grandpa",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "PauseFailed",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Attempt to signal GRANDPA pause when the authority set isn't live",
                    "(either paused or already pending pause)."
                  ]
                },
                {
                  "name": "ResumeFailed",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Attempt to signal GRANDPA resume when the authority set isn't paused",
                    "(either live or already pending resume)."
                  ]
                },
                {
                  "name": "ChangePending",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Attempt to signal GRANDPA change with one already pending."
                  ]
                },
                {
                  "name": "TooSoon",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "Cannot signal forced change so soon after last."
                  ]
                },
                {
                  "name": "InvalidKeyOwnershipProof",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "A key ownership proof provided as part of an equivocation report is invalid."
                  ]
                },
                {
                  "name": "InvalidEquivocationProof",
                  "fields": [],
                  "index": "5",
                  "docs": [
                    "An equivocation proof provided as part of an equivocation report is invalid."
                  ]
                },
                {
                  "name": "DuplicateOffenceReport",
                  "fields": [],
                  "index": "6",
                  "docs": [
                    "A given equivocation report is valid but already previously reported."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "129",
        "type": {
          "path": [
            "sp_arithmetic",
            "fixed_point",
            "FixedU128"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "6",
                  "typeName": "u128",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "130",
        "type": {
          "path": [
            "pallet_transaction_payment",
            "Releases"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "V1Ancient",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "V2",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "131",
        "type": {
          "path": [
            "pallet_sudo",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "sudo",
                  "fields": [
                    {
                      "name": "call",
                      "type": "132",
                      "typeName": "Box<<T as Config>::Call>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Authenticates the sudo key and dispatches a function call with `Root` origin.",
                    "",
                    "The dispatch origin for this call must be _Signed_.",
                    "",
                    "# <weight>",
                    "- O(1).",
                    "- Limited storage reads.",
                    "- One DB write (event).",
                    "- Weight of derivative `call` execution + 10,000.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "sudo_unchecked_weight",
                  "fields": [
                    {
                      "name": "call",
                      "type": "132",
                      "typeName": "Box<<T as Config>::Call>",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Authenticates the sudo key and dispatches a function call with `Root` origin.",
                    "This function does not check the weight of the call, and instead allows the",
                    "Sudo user to specify the weight of the call.",
                    "",
                    "The dispatch origin for this call must be _Signed_.",
                    "",
                    "# <weight>",
                    "- O(1).",
                    "- The weight of this call is defined by the caller.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "set_key",
                  "fields": [
                    {
                      "name": "new",
                      "type": "89",
                      "typeName": "<T::Lookup as StaticLookup>::Source",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Authenticates the current sudo key and sets the given AccountId (`new`) as the new sudo",
                    "key.",
                    "",
                    "The dispatch origin for this call must be _Signed_.",
                    "",
                    "# <weight>",
                    "- O(1).",
                    "- Limited storage reads.",
                    "- One DB change.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "sudo_as",
                  "fields": [
                    {
                      "name": "who",
                      "type": "89",
                      "typeName": "<T::Lookup as StaticLookup>::Source",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": "132",
                      "typeName": "Box<<T as Config>::Call>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Authenticates the sudo key and dispatches a function call with `Signed` origin from",
                    "a given account.",
                    "",
                    "The dispatch origin for this call must be _Signed_.",
                    "",
                    "# <weight>",
                    "- O(1).",
                    "- Limited storage reads.",
                    "- One DB write (event).",
                    "- Weight of derivative `call` execution + 10,000.",
                    "# </weight>"
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "132",
        "type": {
          "path": [
            "takumi_runtime",
            "Call"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "System",
                  "fields": [
                    {
                      "name": null,
                      "type": "57",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Timestamp",
                  "fields": [
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Balances",
                  "fields": [
                    {
                      "name": null,
                      "type": "88",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "ValidatorSet",
                  "fields": [
                    {
                      "name": null,
                      "type": "96",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ValidatorSet, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Session",
                  "fields": [
                    {
                      "name": null,
                      "type": "106",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Grandpa",
                  "fields": [
                    {
                      "name": null,
                      "type": "115",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "Sudo",
                  "fields": [
                    {
                      "name": null,
                      "type": "131",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "Utility",
                  "fields": [
                    {
                      "name": null,
                      "type": "133",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "ProviderPerms",
                  "fields": [
                    {
                      "name": null,
                      "type": "137",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ProviderPerms, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "TenantPerms",
                  "fields": [
                    {
                      "name": null,
                      "type": "139",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TenantPerms, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "12",
                  "docs": []
                },
                {
                  "name": "Spaces",
                  "fields": [
                    {
                      "name": null,
                      "type": "141",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Spaces, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "13",
                  "docs": []
                },
                {
                  "name": "Tenants",
                  "fields": [
                    {
                      "name": null,
                      "type": "142",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Tenants, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "14",
                  "docs": []
                },
                {
                  "name": "ContentObjectVersions",
                  "fields": [
                    {
                      "name": null,
                      "type": "144",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ContentObjectVersions, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "15",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "133",
        "type": {
          "path": [
            "pallet_utility",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "batch",
                  "fields": [
                    {
                      "name": "calls",
                      "type": "134",
                      "typeName": "Vec<<T as Config>::Call>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Send a batch of dispatch calls.",
                    "",
                    "May be called from any origin.",
                    "",
                    "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                    "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                    "",
                    "If origin is root then call are dispatch without checking origin filter. (This includes",
                    "bypassing `frame_system::Config::BaseCallFilter`).",
                    "",
                    "# <weight>",
                    "- Complexity: O(C) where C is the number of calls to be batched.",
                    "# </weight>",
                    "",
                    "This will return `Ok` in all circumstances. To determine the success of the batch, an",
                    "event is deposited. If a call failed and the batch was interrupted, then the",
                    "`BatchInterrupted` event is deposited, along with the number of successful calls made",
                    "and the error of the failed call. If all were successful, then the `BatchCompleted`",
                    "event is deposited."
                  ]
                },
                {
                  "name": "as_derivative",
                  "fields": [
                    {
                      "name": "index",
                      "type": "74",
                      "typeName": "u16",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": "132",
                      "typeName": "Box<<T as Config>::Call>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Send a call through an indexed pseudonym of the sender.",
                    "",
                    "Filter from origin are passed along. The call will be dispatched with an origin which",
                    "use the same filter as the origin of this call.",
                    "",
                    "NOTE: If you need to ensure that any account-based filtering is not honored (i.e.",
                    "because you expect `proxy` to have been used prior in the call stack and you do not want",
                    "the call restrictions to apply to any sub-accounts), then use `as_multi_threshold_1`",
                    "in the Multisig pallet instead.",
                    "",
                    "NOTE: Prior to version *12, this was called `as_limited_sub`.",
                    "",
                    "The dispatch origin for this call must be _Signed_."
                  ]
                },
                {
                  "name": "batch_all",
                  "fields": [
                    {
                      "name": "calls",
                      "type": "134",
                      "typeName": "Vec<<T as Config>::Call>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Send a batch of dispatch calls and atomically execute them.",
                    "The whole transaction will rollback and fail if any of the calls failed.",
                    "",
                    "May be called from any origin.",
                    "",
                    "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                    "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                    "",
                    "If origin is root then call are dispatch without checking origin filter. (This includes",
                    "bypassing `frame_system::Config::BaseCallFilter`).",
                    "",
                    "# <weight>",
                    "- Complexity: O(C) where C is the number of calls to be batched.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "dispatch_as",
                  "fields": [
                    {
                      "name": "as_origin",
                      "type": "135",
                      "typeName": "Box<T::PalletsOrigin>",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": "132",
                      "typeName": "Box<<T as Config>::Call>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Dispatches a function call with a provided origin.",
                    "",
                    "The dispatch origin for this call must be _Root_.",
                    "",
                    "# <weight>",
                    "- O(1).",
                    "- Limited storage reads.",
                    "- One DB write (event).",
                    "- Weight of derivative `call` execution + T::WeightInfo::dispatch_as().",
                    "# </weight>"
                  ]
                },
                {
                  "name": "force_batch",
                  "fields": [
                    {
                      "name": "calls",
                      "type": "134",
                      "typeName": "Vec<<T as Config>::Call>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Send a batch of dispatch calls.",
                    "Unlike `batch`, it allows errors and won't interrupt.",
                    "",
                    "May be called from any origin.",
                    "",
                    "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                    "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                    "",
                    "If origin is root then call are dispatch without checking origin filter. (This includes",
                    "bypassing `frame_system::Config::BaseCallFilter`).",
                    "",
                    "# <weight>",
                    "- Complexity: O(C) where C is the number of calls to be batched.",
                    "# </weight>"
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "134",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "132"
            }
          },
          "docs": []
        }
      },
      {
        "id": "135",
        "type": {
          "path": [
            "takumi_runtime",
            "OriginCaller"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "system",
                  "fields": [
                    {
                      "name": null,
                      "type": "136",
                      "typeName": "frame_system::Origin<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Void",
                  "fields": [
                    {
                      "name": null,
                      "type": "127",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::Void",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "136",
        "type": {
          "path": [
            "frame_support",
            "dispatch",
            "RawOrigin"
          ],
          "params": [
            {
              "name": "AccountId",
              "type": "0"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Root",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Signed",
                  "fields": [
                    {
                      "name": null,
                      "type": "0",
                      "typeName": "AccountId",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "None",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "137",
        "type": {
          "path": [
            "pallet_ord_permissions",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "set_rights",
                  "fields": [
                    {
                      "name": "id",
                      "type": "43",
                      "typeName": "T::Identifier",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "level",
                      "type": "138",
                      "typeName": "T::PermissionLevel",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "138",
        "type": {
          "path": [
            "takumi_common",
            "permission",
            "ProviderPermissionLevel"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Root",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Admin",
                  "fields": [],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Node",
                  "fields": [],
                  "index": "3",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "139",
        "type": {
          "path": [
            "pallet_ord_permissions",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "set_rights",
                  "fields": [
                    {
                      "name": "id",
                      "type": "43",
                      "typeName": "T::Identifier",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "level",
                      "type": "140",
                      "typeName": "T::PermissionLevel",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "140",
        "type": {
          "path": [
            "takumi_common",
            "permission",
            "TenantPermissionLevel"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Root",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Admin",
                  "fields": [],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "KMS",
                  "fields": [],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "Content",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "141",
        "type": {
          "path": [
            "pallet_spaces",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "create_space",
                  "fields": [
                    {
                      "name": "space",
                      "type": "43",
                      "typeName": "T::SpaceId",
                      "docs": []
                    },
                    {
                      "name": "rules",
                      "type": "9",
                      "typeName": "T::Rules",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "create_tenant",
                  "fields": [
                    {
                      "name": "space",
                      "type": "43",
                      "typeName": "T::SpaceId",
                      "docs": []
                    },
                    {
                      "name": "tenant",
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": "tenant_root",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "tenant_role",
                      "type": "46",
                      "typeName": "TenantRole",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "remove_tenant",
                  "fields": [
                    {
                      "name": "space",
                      "type": "43",
                      "typeName": "T::SpaceId",
                      "docs": []
                    },
                    {
                      "name": "tenant",
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "142",
        "type": {
          "path": [
            "pallet_tenants",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "provider_add_node",
                  "fields": [
                    {
                      "name": "provider",
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": "nid",
                      "type": "43",
                      "typeName": "T::NodeId",
                      "docs": []
                    },
                    {
                      "name": "locator",
                      "type": "143",
                      "typeName": "LocatorFor<T>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "provider_confirm_node",
                  "fields": [
                    {
                      "name": "provider",
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": "nid",
                      "type": "43",
                      "typeName": "T::NodeId",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "provider_remove_node",
                  "fields": [
                    {
                      "name": "provider",
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": "nid",
                      "type": "43",
                      "typeName": "T::NodeId",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "tenant_add_kms",
                  "fields": [
                    {
                      "name": "tenant",
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": "kms",
                      "type": "43",
                      "typeName": "T::KMSId",
                      "docs": []
                    },
                    {
                      "name": "locator",
                      "type": "143",
                      "typeName": "LocatorFor<T>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "tenant_remove_kms",
                  "fields": [
                    {
                      "name": "tenant",
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": "kms",
                      "type": "43",
                      "typeName": "T::KMSId",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "143",
        "type": {
          "path": [
            "sp_runtime",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "2"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "10",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "144",
        "type": {
          "path": [
            "pallet_content",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "add_versions",
                  "fields": [
                    {
                      "name": "msg",
                      "type": "145",
                      "typeName": "AddVersionsMessageFor<T>",
                      "docs": []
                    },
                    {
                      "name": "user_signer",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "user_sig",
                      "type": "149",
                      "typeName": "MultiSignature",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Called by a provider node in order to commit a piece of content on behalf of a user.",
                    "The user passes in a signed blob to authorize the creation of the version."
                  ]
                },
                {
                  "name": "set_current_version",
                  "fields": [
                    {
                      "name": "tenant_id",
                      "type": "43",
                      "typeName": "T::TenantId",
                      "docs": []
                    },
                    {
                      "name": "cobj_id",
                      "type": "43",
                      "typeName": "T::ContentObjectId",
                      "docs": []
                    },
                    {
                      "name": "version",
                      "type": "49",
                      "typeName": "Option<T::VersionId>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "delete_versions",
                  "fields": [
                    {
                      "name": "msg",
                      "type": "153",
                      "typeName": "DeleteVersionsMessageFor<T>",
                      "docs": []
                    },
                    {
                      "name": "user_signer",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "sig",
                      "type": "149",
                      "typeName": "MultiSignature",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "delete_all_versions",
                  "fields": [
                    {
                      "name": "msg",
                      "type": "156",
                      "typeName": "DeleteAllVersionsMessageFor<T>",
                      "docs": []
                    },
                    {
                      "name": "user_signer",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "sig",
                      "type": "149",
                      "typeName": "MultiSignature",
                      "docs": []
                    },
                    {
                      "name": "limit",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "145",
        "type": {
          "path": [
            "pallet_content",
            "state",
            "AddVersionsMessage"
          ],
          "params": [
            {
              "name": "TenantId",
              "type": "43"
            },
            {
              "name": "ContentObjectId",
              "type": "43"
            },
            {
              "name": "VerId",
              "type": "9"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "provider_originator",
                  "type": "43",
                  "typeName": "TenantId",
                  "docs": []
                },
                {
                  "name": "tenant_id",
                  "type": "43",
                  "typeName": "TenantId",
                  "docs": []
                },
                {
                  "name": "cobjs",
                  "type": "146",
                  "typeName": "Vec<ContentObjectId>",
                  "docs": []
                },
                {
                  "name": "vers",
                  "type": "147",
                  "typeName": "Vec<VersionToAdd<VerId>>",
                  "docs": []
                },
                {
                  "name": "ts",
                  "type": "8",
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "146",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "43"
            }
          },
          "docs": []
        }
      },
      {
        "id": "147",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "148"
            }
          },
          "docs": []
        }
      },
      {
        "id": "148",
        "type": {
          "path": [
            "pallet_content",
            "state",
            "VersionToAdd"
          ],
          "params": [
            {
              "name": "VerId",
              "type": "9"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "cobj_ind",
                  "type": "74",
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "ver_id",
                  "type": "9",
                  "typeName": "VerId",
                  "docs": []
                },
                {
                  "name": "tlp_size",
                  "type": "78",
                  "typeName": "Compact<u64>",
                  "docs": []
                },
                {
                  "name": "set_as_current",
                  "type": "48",
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "149",
        "type": {
          "path": [
            "sp_runtime",
            "MultiSignature"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Ed25519",
                  "fields": [
                    {
                      "name": null,
                      "type": "121",
                      "typeName": "ed25519::Signature",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Sr25519",
                  "fields": [
                    {
                      "name": null,
                      "type": "150",
                      "typeName": "sr25519::Signature",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Ecdsa",
                  "fields": [
                    {
                      "name": null,
                      "type": "151",
                      "typeName": "ecdsa::Signature",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "150",
        "type": {
          "path": [
            "sp_core",
            "sr25519",
            "Signature"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "122",
                  "typeName": "[u8; 64]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "151",
        "type": {
          "path": [
            "sp_core",
            "ecdsa",
            "Signature"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "152",
                  "typeName": "[u8; 65]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "152",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "65",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "153",
        "type": {
          "path": [
            "pallet_content",
            "state",
            "DeleteVersionsMessage"
          ],
          "params": [
            {
              "name": "TenantId",
              "type": "43"
            },
            {
              "name": "ContentObjectId",
              "type": "43"
            },
            {
              "name": "VerId",
              "type": "9"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "provider_originator",
                  "type": "43",
                  "typeName": "TenantId",
                  "docs": []
                },
                {
                  "name": "tenant_id",
                  "type": "43",
                  "typeName": "TenantId",
                  "docs": []
                },
                {
                  "name": "cobjs",
                  "type": "146",
                  "typeName": "Vec<ContentObjectId>",
                  "docs": []
                },
                {
                  "name": "vers",
                  "type": "154",
                  "typeName": "Vec<(u16, VerId)>",
                  "docs": []
                },
                {
                  "name": "ts",
                  "type": "8",
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "154",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "155"
            }
          },
          "docs": []
        }
      },
      {
        "id": "155",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "74",
              "9"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "156",
        "type": {
          "path": [
            "pallet_content",
            "state",
            "DeleteAllVersionsMessage"
          ],
          "params": [
            {
              "name": "TenantId",
              "type": "43"
            },
            {
              "name": "ContentObjectId",
              "type": "43"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "provider_originator",
                  "type": "43",
                  "typeName": "TenantId",
                  "docs": []
                },
                {
                  "name": "tenant_id",
                  "type": "43",
                  "typeName": "TenantId",
                  "docs": []
                },
                {
                  "name": "cobj_id",
                  "type": "43",
                  "typeName": "ContentObjectId",
                  "docs": []
                },
                {
                  "name": "ts",
                  "type": "8",
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "157",
        "type": {
          "path": [
            "pallet_sudo",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "RequireSudo",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Sender must be the Sudo account"
                  ]
                }
              ]
            }
          },
          "docs": [
            "Error for the Sudo pallet"
          ]
        }
      },
      {
        "id": "158",
        "type": {
          "path": [
            "pallet_utility",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "TooManyCalls",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Too many calls batched."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "159",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "43",
              "0"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "160",
        "type": {
          "path": [
            "pallet_ord_permissions",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InsufficientRights",
                  "fields": [],
                  "index": "0",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "161",
        "type": {
          "path": [
            "pallet_ord_permissions",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InsufficientRights",
                  "fields": [],
                  "index": "0",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "162",
        "type": {
          "path": [
            "pallet_spaces",
            "state",
            "SpaceMetadata"
          ],
          "params": [
            {
              "name": "AccountId",
              "type": "0"
            },
            {
              "name": "Rules",
              "type": "9"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "tenant_count",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "root",
                  "type": "0",
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "rules",
                  "type": "9",
                  "typeName": "Rules",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "163",
        "type": {
          "path": [
            "pallet_spaces",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "SpaceNotFound",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "SpaceAlreadyExists",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "TenantNotFound",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "InsufficientPermissions",
                  "fields": [],
                  "index": "3",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "164",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "43",
              "43"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "165",
        "type": {
          "path": [
            "pallet_tenants",
            "state",
            "ProviderNodeMetadata"
          ],
          "params": [
            {
              "name": "Locator",
              "type": "143"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "locator",
                  "type": "143",
                  "typeName": "Locator",
                  "docs": []
                },
                {
                  "name": "pending",
                  "type": "48",
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "166",
        "type": {
          "path": [
            "pallet_tenants",
            "state",
            "TenantMetadata"
          ],
          "params": [
            {
              "name": "AccountId",
              "type": "0"
            },
            {
              "name": "SpaceId",
              "type": "43"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "root",
                  "type": "0",
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "space",
                  "type": "43",
                  "typeName": "SpaceId",
                  "docs": []
                },
                {
                  "name": "role",
                  "type": "46",
                  "typeName": "TenantRole",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "167",
        "type": {
          "path": [
            "pallet_tenants",
            "state",
            "TenantKMSMetadata"
          ],
          "params": [
            {
              "name": "Locator",
              "type": "143"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "locator",
                  "type": "143",
                  "typeName": "Locator",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "168",
        "type": {
          "path": [
            "pallet_tenants",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "AccessDenied",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Access Denied, permission level not high enough"
                  ]
                },
                {
                  "name": "TenantDoesNotExist",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "TenantIsNotProvider",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "TenantAlreadyExists",
                  "fields": [],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "NodeDoesNotExist",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "Locator does not exist"
                  ]
                },
                {
                  "name": "NodeAlreadyExists",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "NodeAlreadyConfirmed",
                  "fields": [],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "KMSDoesNotExist",
                  "fields": [],
                  "index": "7",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "169",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "43",
              "43",
              "9"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "170",
        "type": {
          "path": [
            "pallet_content",
            "state",
            "VersionMetadata"
          ],
          "params": [
            {
              "name": "TenantId",
              "type": "43"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "ts",
                  "type": "8",
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "tlp_size",
                  "type": "78",
                  "typeName": "Compact<u64>",
                  "docs": []
                },
                {
                  "name": "provider_originator",
                  "type": "43",
                  "typeName": "TenantId",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "171",
        "type": {
          "path": [
            "pallet_content",
            "pallet",
            "ContentObjectMetadata"
          ],
          "params": [
            {
              "name": "VersionId",
              "type": "9"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "version_count",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "current_version",
                  "type": "49",
                  "typeName": "Option<VersionId>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "172",
        "type": {
          "path": [
            "pallet_content",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "NoEditRights",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "AccessDenied",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "InvalidSignature",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "VersionDoesNotExist",
                  "fields": [],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "IncorrectProvider",
                  "fields": [],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "CouldNotDeleteAllVersions",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "VersionAlreadyExists",
                  "fields": [],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "ContentObjectIndexIncorrect",
                  "fields": [],
                  "index": "7",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "173",
        "type": {
          "path": [
            "sp_runtime",
            "generic",
            "unchecked_extrinsic",
            "UncheckedExtrinsic"
          ],
          "params": [
            {
              "name": "Address",
              "type": "89"
            },
            {
              "name": "Call",
              "type": "132"
            },
            {
              "name": "Signature",
              "type": "149"
            },
            {
              "name": "Extra",
              "type": "174"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "10",
                  "typeName": null,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "174",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "175",
              "176",
              "177",
              "178",
              "179",
              "181",
              "182",
              "183"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "175",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_non_zero_sender",
            "CheckNonZeroSender"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "176",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_spec_version",
            "CheckSpecVersion"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "177",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_tx_version",
            "CheckTxVersion"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "178",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_genesis",
            "CheckGenesis"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "179",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_mortality",
            "CheckMortality"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "180",
                  "typeName": "Era",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "180",
        "type": {
          "path": [
            "sp_runtime",
            "generic",
            "era",
            "Era"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Immortal",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Mortal1",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Mortal2",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Mortal3",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "Mortal4",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Mortal5",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Mortal6",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "Mortal7",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "Mortal8",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "Mortal9",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "Mortal10",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "Mortal11",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "Mortal12",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "12",
                  "docs": []
                },
                {
                  "name": "Mortal13",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "13",
                  "docs": []
                },
                {
                  "name": "Mortal14",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "14",
                  "docs": []
                },
                {
                  "name": "Mortal15",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "15",
                  "docs": []
                },
                {
                  "name": "Mortal16",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "16",
                  "docs": []
                },
                {
                  "name": "Mortal17",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "17",
                  "docs": []
                },
                {
                  "name": "Mortal18",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "18",
                  "docs": []
                },
                {
                  "name": "Mortal19",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "19",
                  "docs": []
                },
                {
                  "name": "Mortal20",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "20",
                  "docs": []
                },
                {
                  "name": "Mortal21",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "21",
                  "docs": []
                },
                {
                  "name": "Mortal22",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "22",
                  "docs": []
                },
                {
                  "name": "Mortal23",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "23",
                  "docs": []
                },
                {
                  "name": "Mortal24",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "24",
                  "docs": []
                },
                {
                  "name": "Mortal25",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "25",
                  "docs": []
                },
                {
                  "name": "Mortal26",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "26",
                  "docs": []
                },
                {
                  "name": "Mortal27",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "27",
                  "docs": []
                },
                {
                  "name": "Mortal28",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "28",
                  "docs": []
                },
                {
                  "name": "Mortal29",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "29",
                  "docs": []
                },
                {
                  "name": "Mortal30",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "30",
                  "docs": []
                },
                {
                  "name": "Mortal31",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "31",
                  "docs": []
                },
                {
                  "name": "Mortal32",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "32",
                  "docs": []
                },
                {
                  "name": "Mortal33",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "33",
                  "docs": []
                },
                {
                  "name": "Mortal34",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "34",
                  "docs": []
                },
                {
                  "name": "Mortal35",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "35",
                  "docs": []
                },
                {
                  "name": "Mortal36",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "36",
                  "docs": []
                },
                {
                  "name": "Mortal37",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "37",
                  "docs": []
                },
                {
                  "name": "Mortal38",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "38",
                  "docs": []
                },
                {
                  "name": "Mortal39",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "39",
                  "docs": []
                },
                {
                  "name": "Mortal40",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "40",
                  "docs": []
                },
                {
                  "name": "Mortal41",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "41",
                  "docs": []
                },
                {
                  "name": "Mortal42",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "42",
                  "docs": []
                },
                {
                  "name": "Mortal43",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "43",
                  "docs": []
                },
                {
                  "name": "Mortal44",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "44",
                  "docs": []
                },
                {
                  "name": "Mortal45",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "45",
                  "docs": []
                },
                {
                  "name": "Mortal46",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "46",
                  "docs": []
                },
                {
                  "name": "Mortal47",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "47",
                  "docs": []
                },
                {
                  "name": "Mortal48",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "48",
                  "docs": []
                },
                {
                  "name": "Mortal49",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "49",
                  "docs": []
                },
                {
                  "name": "Mortal50",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "50",
                  "docs": []
                },
                {
                  "name": "Mortal51",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "51",
                  "docs": []
                },
                {
                  "name": "Mortal52",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "52",
                  "docs": []
                },
                {
                  "name": "Mortal53",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "53",
                  "docs": []
                },
                {
                  "name": "Mortal54",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "54",
                  "docs": []
                },
                {
                  "name": "Mortal55",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "55",
                  "docs": []
                },
                {
                  "name": "Mortal56",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "56",
                  "docs": []
                },
                {
                  "name": "Mortal57",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "57",
                  "docs": []
                },
                {
                  "name": "Mortal58",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "58",
                  "docs": []
                },
                {
                  "name": "Mortal59",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "59",
                  "docs": []
                },
                {
                  "name": "Mortal60",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "60",
                  "docs": []
                },
                {
                  "name": "Mortal61",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "61",
                  "docs": []
                },
                {
                  "name": "Mortal62",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "62",
                  "docs": []
                },
                {
                  "name": "Mortal63",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "63",
                  "docs": []
                },
                {
                  "name": "Mortal64",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "64",
                  "docs": []
                },
                {
                  "name": "Mortal65",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "65",
                  "docs": []
                },
                {
                  "name": "Mortal66",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "66",
                  "docs": []
                },
                {
                  "name": "Mortal67",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "67",
                  "docs": []
                },
                {
                  "name": "Mortal68",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "68",
                  "docs": []
                },
                {
                  "name": "Mortal69",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "69",
                  "docs": []
                },
                {
                  "name": "Mortal70",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "70",
                  "docs": []
                },
                {
                  "name": "Mortal71",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "71",
                  "docs": []
                },
                {
                  "name": "Mortal72",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "72",
                  "docs": []
                },
                {
                  "name": "Mortal73",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "73",
                  "docs": []
                },
                {
                  "name": "Mortal74",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "74",
                  "docs": []
                },
                {
                  "name": "Mortal75",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "75",
                  "docs": []
                },
                {
                  "name": "Mortal76",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "76",
                  "docs": []
                },
                {
                  "name": "Mortal77",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "77",
                  "docs": []
                },
                {
                  "name": "Mortal78",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "78",
                  "docs": []
                },
                {
                  "name": "Mortal79",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "79",
                  "docs": []
                },
                {
                  "name": "Mortal80",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "80",
                  "docs": []
                },
                {
                  "name": "Mortal81",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "81",
                  "docs": []
                },
                {
                  "name": "Mortal82",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "82",
                  "docs": []
                },
                {
                  "name": "Mortal83",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "83",
                  "docs": []
                },
                {
                  "name": "Mortal84",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "84",
                  "docs": []
                },
                {
                  "name": "Mortal85",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "85",
                  "docs": []
                },
                {
                  "name": "Mortal86",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "86",
                  "docs": []
                },
                {
                  "name": "Mortal87",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "87",
                  "docs": []
                },
                {
                  "name": "Mortal88",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "88",
                  "docs": []
                },
                {
                  "name": "Mortal89",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "89",
                  "docs": []
                },
                {
                  "name": "Mortal90",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "90",
                  "docs": []
                },
                {
                  "name": "Mortal91",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "91",
                  "docs": []
                },
                {
                  "name": "Mortal92",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "92",
                  "docs": []
                },
                {
                  "name": "Mortal93",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "93",
                  "docs": []
                },
                {
                  "name": "Mortal94",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "94",
                  "docs": []
                },
                {
                  "name": "Mortal95",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "95",
                  "docs": []
                },
                {
                  "name": "Mortal96",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "96",
                  "docs": []
                },
                {
                  "name": "Mortal97",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "97",
                  "docs": []
                },
                {
                  "name": "Mortal98",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "98",
                  "docs": []
                },
                {
                  "name": "Mortal99",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "99",
                  "docs": []
                },
                {
                  "name": "Mortal100",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "100",
                  "docs": []
                },
                {
                  "name": "Mortal101",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "101",
                  "docs": []
                },
                {
                  "name": "Mortal102",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "102",
                  "docs": []
                },
                {
                  "name": "Mortal103",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "103",
                  "docs": []
                },
                {
                  "name": "Mortal104",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "104",
                  "docs": []
                },
                {
                  "name": "Mortal105",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "105",
                  "docs": []
                },
                {
                  "name": "Mortal106",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "106",
                  "docs": []
                },
                {
                  "name": "Mortal107",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "107",
                  "docs": []
                },
                {
                  "name": "Mortal108",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "108",
                  "docs": []
                },
                {
                  "name": "Mortal109",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "109",
                  "docs": []
                },
                {
                  "name": "Mortal110",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "110",
                  "docs": []
                },
                {
                  "name": "Mortal111",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "111",
                  "docs": []
                },
                {
                  "name": "Mortal112",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "112",
                  "docs": []
                },
                {
                  "name": "Mortal113",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "113",
                  "docs": []
                },
                {
                  "name": "Mortal114",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "114",
                  "docs": []
                },
                {
                  "name": "Mortal115",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "115",
                  "docs": []
                },
                {
                  "name": "Mortal116",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "116",
                  "docs": []
                },
                {
                  "name": "Mortal117",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "117",
                  "docs": []
                },
                {
                  "name": "Mortal118",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "118",
                  "docs": []
                },
                {
                  "name": "Mortal119",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "119",
                  "docs": []
                },
                {
                  "name": "Mortal120",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "120",
                  "docs": []
                },
                {
                  "name": "Mortal121",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "121",
                  "docs": []
                },
                {
                  "name": "Mortal122",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "122",
                  "docs": []
                },
                {
                  "name": "Mortal123",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "123",
                  "docs": []
                },
                {
                  "name": "Mortal124",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "124",
                  "docs": []
                },
                {
                  "name": "Mortal125",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "125",
                  "docs": []
                },
                {
                  "name": "Mortal126",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "126",
                  "docs": []
                },
                {
                  "name": "Mortal127",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "127",
                  "docs": []
                },
                {
                  "name": "Mortal128",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "128",
                  "docs": []
                },
                {
                  "name": "Mortal129",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "129",
                  "docs": []
                },
                {
                  "name": "Mortal130",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "130",
                  "docs": []
                },
                {
                  "name": "Mortal131",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "131",
                  "docs": []
                },
                {
                  "name": "Mortal132",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "132",
                  "docs": []
                },
                {
                  "name": "Mortal133",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "133",
                  "docs": []
                },
                {
                  "name": "Mortal134",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "134",
                  "docs": []
                },
                {
                  "name": "Mortal135",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "135",
                  "docs": []
                },
                {
                  "name": "Mortal136",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "136",
                  "docs": []
                },
                {
                  "name": "Mortal137",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "137",
                  "docs": []
                },
                {
                  "name": "Mortal138",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "138",
                  "docs": []
                },
                {
                  "name": "Mortal139",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "139",
                  "docs": []
                },
                {
                  "name": "Mortal140",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "140",
                  "docs": []
                },
                {
                  "name": "Mortal141",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "141",
                  "docs": []
                },
                {
                  "name": "Mortal142",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "142",
                  "docs": []
                },
                {
                  "name": "Mortal143",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "143",
                  "docs": []
                },
                {
                  "name": "Mortal144",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "144",
                  "docs": []
                },
                {
                  "name": "Mortal145",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "145",
                  "docs": []
                },
                {
                  "name": "Mortal146",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "146",
                  "docs": []
                },
                {
                  "name": "Mortal147",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "147",
                  "docs": []
                },
                {
                  "name": "Mortal148",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "148",
                  "docs": []
                },
                {
                  "name": "Mortal149",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "149",
                  "docs": []
                },
                {
                  "name": "Mortal150",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "150",
                  "docs": []
                },
                {
                  "name": "Mortal151",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "151",
                  "docs": []
                },
                {
                  "name": "Mortal152",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "152",
                  "docs": []
                },
                {
                  "name": "Mortal153",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "153",
                  "docs": []
                },
                {
                  "name": "Mortal154",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "154",
                  "docs": []
                },
                {
                  "name": "Mortal155",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "155",
                  "docs": []
                },
                {
                  "name": "Mortal156",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "156",
                  "docs": []
                },
                {
                  "name": "Mortal157",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "157",
                  "docs": []
                },
                {
                  "name": "Mortal158",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "158",
                  "docs": []
                },
                {
                  "name": "Mortal159",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "159",
                  "docs": []
                },
                {
                  "name": "Mortal160",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "160",
                  "docs": []
                },
                {
                  "name": "Mortal161",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "161",
                  "docs": []
                },
                {
                  "name": "Mortal162",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "162",
                  "docs": []
                },
                {
                  "name": "Mortal163",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "163",
                  "docs": []
                },
                {
                  "name": "Mortal164",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "164",
                  "docs": []
                },
                {
                  "name": "Mortal165",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "165",
                  "docs": []
                },
                {
                  "name": "Mortal166",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "166",
                  "docs": []
                },
                {
                  "name": "Mortal167",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "167",
                  "docs": []
                },
                {
                  "name": "Mortal168",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "168",
                  "docs": []
                },
                {
                  "name": "Mortal169",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "169",
                  "docs": []
                },
                {
                  "name": "Mortal170",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "170",
                  "docs": []
                },
                {
                  "name": "Mortal171",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "171",
                  "docs": []
                },
                {
                  "name": "Mortal172",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "172",
                  "docs": []
                },
                {
                  "name": "Mortal173",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "173",
                  "docs": []
                },
                {
                  "name": "Mortal174",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "174",
                  "docs": []
                },
                {
                  "name": "Mortal175",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "175",
                  "docs": []
                },
                {
                  "name": "Mortal176",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "176",
                  "docs": []
                },
                {
                  "name": "Mortal177",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "177",
                  "docs": []
                },
                {
                  "name": "Mortal178",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "178",
                  "docs": []
                },
                {
                  "name": "Mortal179",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "179",
                  "docs": []
                },
                {
                  "name": "Mortal180",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "180",
                  "docs": []
                },
                {
                  "name": "Mortal181",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "181",
                  "docs": []
                },
                {
                  "name": "Mortal182",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "182",
                  "docs": []
                },
                {
                  "name": "Mortal183",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "183",
                  "docs": []
                },
                {
                  "name": "Mortal184",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "184",
                  "docs": []
                },
                {
                  "name": "Mortal185",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "185",
                  "docs": []
                },
                {
                  "name": "Mortal186",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "186",
                  "docs": []
                },
                {
                  "name": "Mortal187",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "187",
                  "docs": []
                },
                {
                  "name": "Mortal188",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "188",
                  "docs": []
                },
                {
                  "name": "Mortal189",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "189",
                  "docs": []
                },
                {
                  "name": "Mortal190",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "190",
                  "docs": []
                },
                {
                  "name": "Mortal191",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "191",
                  "docs": []
                },
                {
                  "name": "Mortal192",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "192",
                  "docs": []
                },
                {
                  "name": "Mortal193",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "193",
                  "docs": []
                },
                {
                  "name": "Mortal194",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "194",
                  "docs": []
                },
                {
                  "name": "Mortal195",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "195",
                  "docs": []
                },
                {
                  "name": "Mortal196",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "196",
                  "docs": []
                },
                {
                  "name": "Mortal197",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "197",
                  "docs": []
                },
                {
                  "name": "Mortal198",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "198",
                  "docs": []
                },
                {
                  "name": "Mortal199",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "199",
                  "docs": []
                },
                {
                  "name": "Mortal200",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "200",
                  "docs": []
                },
                {
                  "name": "Mortal201",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "201",
                  "docs": []
                },
                {
                  "name": "Mortal202",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "202",
                  "docs": []
                },
                {
                  "name": "Mortal203",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "203",
                  "docs": []
                },
                {
                  "name": "Mortal204",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "204",
                  "docs": []
                },
                {
                  "name": "Mortal205",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "205",
                  "docs": []
                },
                {
                  "name": "Mortal206",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "206",
                  "docs": []
                },
                {
                  "name": "Mortal207",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "207",
                  "docs": []
                },
                {
                  "name": "Mortal208",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "208",
                  "docs": []
                },
                {
                  "name": "Mortal209",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "209",
                  "docs": []
                },
                {
                  "name": "Mortal210",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "210",
                  "docs": []
                },
                {
                  "name": "Mortal211",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "211",
                  "docs": []
                },
                {
                  "name": "Mortal212",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "212",
                  "docs": []
                },
                {
                  "name": "Mortal213",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "213",
                  "docs": []
                },
                {
                  "name": "Mortal214",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "214",
                  "docs": []
                },
                {
                  "name": "Mortal215",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "215",
                  "docs": []
                },
                {
                  "name": "Mortal216",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "216",
                  "docs": []
                },
                {
                  "name": "Mortal217",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "217",
                  "docs": []
                },
                {
                  "name": "Mortal218",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "218",
                  "docs": []
                },
                {
                  "name": "Mortal219",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "219",
                  "docs": []
                },
                {
                  "name": "Mortal220",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "220",
                  "docs": []
                },
                {
                  "name": "Mortal221",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "221",
                  "docs": []
                },
                {
                  "name": "Mortal222",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "222",
                  "docs": []
                },
                {
                  "name": "Mortal223",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "223",
                  "docs": []
                },
                {
                  "name": "Mortal224",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "224",
                  "docs": []
                },
                {
                  "name": "Mortal225",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "225",
                  "docs": []
                },
                {
                  "name": "Mortal226",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "226",
                  "docs": []
                },
                {
                  "name": "Mortal227",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "227",
                  "docs": []
                },
                {
                  "name": "Mortal228",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "228",
                  "docs": []
                },
                {
                  "name": "Mortal229",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "229",
                  "docs": []
                },
                {
                  "name": "Mortal230",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "230",
                  "docs": []
                },
                {
                  "name": "Mortal231",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "231",
                  "docs": []
                },
                {
                  "name": "Mortal232",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "232",
                  "docs": []
                },
                {
                  "name": "Mortal233",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "233",
                  "docs": []
                },
                {
                  "name": "Mortal234",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "234",
                  "docs": []
                },
                {
                  "name": "Mortal235",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "235",
                  "docs": []
                },
                {
                  "name": "Mortal236",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "236",
                  "docs": []
                },
                {
                  "name": "Mortal237",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "237",
                  "docs": []
                },
                {
                  "name": "Mortal238",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "238",
                  "docs": []
                },
                {
                  "name": "Mortal239",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "239",
                  "docs": []
                },
                {
                  "name": "Mortal240",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "240",
                  "docs": []
                },
                {
                  "name": "Mortal241",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "241",
                  "docs": []
                },
                {
                  "name": "Mortal242",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "242",
                  "docs": []
                },
                {
                  "name": "Mortal243",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "243",
                  "docs": []
                },
                {
                  "name": "Mortal244",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "244",
                  "docs": []
                },
                {
                  "name": "Mortal245",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "245",
                  "docs": []
                },
                {
                  "name": "Mortal246",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "246",
                  "docs": []
                },
                {
                  "name": "Mortal247",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "247",
                  "docs": []
                },
                {
                  "name": "Mortal248",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "248",
                  "docs": []
                },
                {
                  "name": "Mortal249",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "249",
                  "docs": []
                },
                {
                  "name": "Mortal250",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "250",
                  "docs": []
                },
                {
                  "name": "Mortal251",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "251",
                  "docs": []
                },
                {
                  "name": "Mortal252",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "252",
                  "docs": []
                },
                {
                  "name": "Mortal253",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "253",
                  "docs": []
                },
                {
                  "name": "Mortal254",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "254",
                  "docs": []
                },
                {
                  "name": "Mortal255",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "255",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "181",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_nonce",
            "CheckNonce"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "55",
                  "typeName": "T::Index",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "182",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_weight",
            "CheckWeight"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "183",
        "type": {
          "path": [
            "pallet_transaction_payment",
            "ChargeTransactionPayment"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "92",
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "184",
        "type": {
          "path": [
            "takumi_runtime",
            "Runtime"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      }
    ]
  },
  "pallets": [
    {
      "name": "System",
      "storage": {
        "prefix": "System",
        "items": [
          {
            "name": "Account",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "0",
                "value": "3"
              }
            },
            "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "docs": [
              " The full account information for a particular account ID."
            ]
          },
          {
            "name": "ExtrinsicCount",
            "modifier": "Optional",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00",
            "docs": [
              " Total extrinsics count for the current block."
            ]
          },
          {
            "name": "BlockWeight",
            "modifier": "Default",
            "type": {
              "Plain": "7"
            },
            "fallback": "0x000000000000000000000000000000000000000000000000",
            "docs": [
              " The current weight for the block."
            ]
          },
          {
            "name": "AllExtrinsicsLen",
            "modifier": "Optional",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00",
            "docs": [
              " Total length (in bytes) for all extrinsics put together, for the current block."
            ]
          },
          {
            "name": "BlockHash",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "4",
                "value": "9"
              }
            },
            "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "docs": [
              " Map of block numbers to block hashes."
            ]
          },
          {
            "name": "ExtrinsicData",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "4",
                "value": "10"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Extrinsics data for the current block (maps an extrinsic's index to its data)."
            ]
          },
          {
            "name": "Number",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " The current block number being processed. Set by `execute_block`."
            ]
          },
          {
            "name": "ParentHash",
            "modifier": "Default",
            "type": {
              "Plain": "9"
            },
            "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "docs": [
              " Hash of the previous block."
            ]
          },
          {
            "name": "Digest",
            "modifier": "Default",
            "type": {
              "Plain": "11"
            },
            "fallback": "0x00",
            "docs": [
              " Digest of the current block, also part of the block header."
            ]
          },
          {
            "name": "Events",
            "modifier": "Default",
            "type": {
              "Plain": "15"
            },
            "fallback": "0x00",
            "docs": [
              " Events deposited for the current block.",
              "",
              " NOTE: The item is unbound and should therefore never be read on chain.",
              " It could otherwise inflate the PoV size of a block.",
              "",
              " Events have a large in-memory size. Box the events to not go out-of-memory",
              " just in case someone still reads them from within the runtime."
            ]
          },
          {
            "name": "EventCount",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " The number of events in the `Events<T>` list."
            ]
          },
          {
            "name": "EventTopics",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "9",
                "value": "52"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Mapping between a topic (represented by T::Hash) and a vector of indexes",
              " of events in the `<Events<T>>` list.",
              "",
              " All topic vectors have deterministic storage locations depending on the topic. This",
              " allows light-clients to leverage the changes trie storage tracking mechanism and",
              " in case of changes fetch the list of events of interest.",
              "",
              " The value has the type `(T::BlockNumber, EventIndex)` because if we used only just",
              " the `EventIndex` then in case if the topic has the same contents on the next block",
              " no notification will be triggered thus the event might be lost."
            ]
          },
          {
            "name": "LastRuntimeUpgrade",
            "modifier": "Optional",
            "type": {
              "Plain": "54"
            },
            "fallback": "0x00",
            "docs": [
              " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
            ]
          },
          {
            "name": "UpgradedToU32RefCount",
            "modifier": "Default",
            "type": {
              "Plain": "48"
            },
            "fallback": "0x00",
            "docs": [
              " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
            ]
          },
          {
            "name": "UpgradedToTripleRefCount",
            "modifier": "Default",
            "type": {
              "Plain": "48"
            },
            "fallback": "0x00",
            "docs": [
              " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
              " (default) if not."
            ]
          },
          {
            "name": "ExecutionPhase",
            "modifier": "Optional",
            "type": {
              "Plain": "50"
            },
            "fallback": "0x00",
            "docs": [
              " The execution phase of the block."
            ]
          }
        ]
      },
      "calls": {
        "type": "57"
      },
      "events": {
        "type": "18"
      },
      "constants": [
        {
          "name": "BlockWeights",
          "type": "62",
          "value": "0xe0d1a93e0100000000204aa9d101000090cd2405000000000170fae4a82e010000010098f73e5d01000001000000000000000090cd2405000000000170823713a30100000100204aa9d1010000010088526a7400000090cd240500000000000000",
          "docs": [
            " Block & extrinsics weights: base values and limits."
          ]
        },
        {
          "name": "BlockLength",
          "type": "66",
          "value": "0x00003c000000500000005000",
          "docs": [
            " The maximum length of a block (in bytes)."
          ]
        },
        {
          "name": "BlockHashCount",
          "type": "4",
          "value": "0x60090000",
          "docs": [
            " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
          ]
        },
        {
          "name": "DbWeight",
          "type": "68",
          "value": "0x40787d010000000000e1f50500000000",
          "docs": [
            " The weight of runtime database operations the runtime can invoke."
          ]
        },
        {
          "name": "Version",
          "type": "69",
          "value": "0x346e6f64652d74656d706c617465346e6f64652d74656d706c61746501000000640000000100000028df6acb689907609b0400000037e397fc7c91f5e40100000040fe3ad401f8959a06000000d2bc9897eed08f1503000000f78b278be53f454c02000000dd718d5cc53262d401000000ab3c0572291feb8b01000000ed99c5acb25eedf503000000bc9d89904f5b923f0100000037c8bb1350a9a2a8010000000100000001",
          "docs": [
            " Get the chain's current version."
          ]
        },
        {
          "name": "SS58Prefix",
          "type": "74",
          "value": "0x2a00",
          "docs": [
            " The designated SS85 prefix of this chain.",
            "",
            " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
            " that the runtime should know about the prefix in order to make use of it as",
            " an identifier of the chain."
          ]
        }
      ],
      "errors": {
        "type": "75"
      },
      "index": "0"
    },
    {
      "name": "RandomnessCollectiveFlip",
      "storage": {
        "prefix": "RandomnessCollectiveFlip",
        "items": [
          {
            "name": "RandomMaterial",
            "modifier": "Default",
            "type": {
              "Plain": "76"
            },
            "fallback": "0x00",
            "docs": [
              " Series of block headers from the last 81 blocks that acts as random seed material. This",
              " is arranged as a ring buffer with `block_number % 81` being the index into the `Vec` of",
              " the oldest hash."
            ]
          }
        ]
      },
      "calls": null,
      "events": null,
      "constants": [],
      "errors": null,
      "index": "1"
    },
    {
      "name": "Timestamp",
      "storage": {
        "prefix": "Timestamp",
        "items": [
          {
            "name": "Now",
            "modifier": "Default",
            "type": {
              "Plain": "8"
            },
            "fallback": "0x0000000000000000",
            "docs": [
              " Current time for the current block."
            ]
          },
          {
            "name": "DidUpdate",
            "modifier": "Default",
            "type": {
              "Plain": "48"
            },
            "fallback": "0x00",
            "docs": [
              " Did the timestamp get updated in this block?"
            ]
          }
        ]
      },
      "calls": {
        "type": "77"
      },
      "events": null,
      "constants": [
        {
          "name": "MinimumPeriod",
          "type": "8",
          "value": "0xf401000000000000",
          "docs": [
            " The minimum period between blocks. Beware that this is different to the *expected*",
            " period that the block production apparatus provides. Your chosen consensus system will",
            " generally work with this to determine a sensible block time. e.g. For Aura, it will be",
            " double this period on default settings."
          ]
        }
      ],
      "errors": null,
      "index": "2"
    },
    {
      "name": "Balances",
      "storage": {
        "prefix": "Balances",
        "items": [
          {
            "name": "TotalIssuance",
            "modifier": "Default",
            "type": {
              "Plain": "6"
            },
            "fallback": "0x00000000000000000000000000000000",
            "docs": [
              " The total units issued in the system."
            ]
          },
          {
            "name": "Account",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "0",
                "value": "5"
              }
            },
            "fallback": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "docs": [
              " The Balances pallet example of storing the balance of an account.",
              "",
              " # Example",
              "",
              " ```nocompile",
              "  impl pallet_balances::Config for Runtime {",
              "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
              "  }",
              " ```",
              "",
              " You can also store the balance of an account in the `System` pallet.",
              "",
              " # Example",
              "",
              " ```nocompile",
              "  impl pallet_balances::Config for Runtime {",
              "   type AccountStore = System",
              "  }",
              " ```",
              "",
              " But this comes with tradeoffs, storing account balances in the system pallet stores",
              " `frame_system` data alongside the account data contrary to storing account balances in the",
              " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
              " NOTE: This is only used in the case that this pallet is used to store balances."
            ]
          },
          {
            "name": "Locks",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "0",
                "value": "79"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Any liquidity locks on some account balances.",
              " NOTE: Should only be accessed when setting, changing and freeing a lock."
            ]
          },
          {
            "name": "Reserves",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "0",
                "value": "83"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Named reserves on some account balances."
            ]
          },
          {
            "name": "StorageVersion",
            "modifier": "Default",
            "type": {
              "Plain": "87"
            },
            "fallback": "0x00",
            "docs": [
              " Storage version of the pallet.",
              "",
              " This is set to v2.0.0 for new networks."
            ]
          }
        ]
      },
      "calls": {
        "type": "88"
      },
      "events": {
        "type": "27"
      },
      "constants": [
        {
          "name": "ExistentialDeposit",
          "type": "6",
          "value": "0xf4010000000000000000000000000000",
          "docs": [
            " The minimum amount required to keep an account open."
          ]
        },
        {
          "name": "MaxLocks",
          "type": "4",
          "value": "0x32000000",
          "docs": [
            " The maximum number of locks that should exist on an account.",
            " Not strictly enforced, but used for weight estimation."
          ]
        },
        {
          "name": "MaxReserves",
          "type": "4",
          "value": "0x00000000",
          "docs": [
            " The maximum number of named reserves that can exist on an account."
          ]
        }
      ],
      "errors": {
        "type": "93"
      },
      "index": "3"
    },
    {
      "name": "ValidatorSet",
      "storage": {
        "prefix": "ValidatorSet",
        "items": [
          {
            "name": "Validators",
            "modifier": "Default",
            "type": {
              "Plain": "94"
            },
            "fallback": "0x00",
            "docs": []
          },
          {
            "name": "ApprovedValidators",
            "modifier": "Default",
            "type": {
              "Plain": "94"
            },
            "fallback": "0x00",
            "docs": []
          },
          {
            "name": "OfflineValidators",
            "modifier": "Default",
            "type": {
              "Plain": "94"
            },
            "fallback": "0x00",
            "docs": []
          }
        ]
      },
      "calls": {
        "type": "96"
      },
      "events": {
        "type": "29"
      },
      "constants": [],
      "errors": {
        "type": "97"
      },
      "index": "4"
    },
    {
      "name": "Session",
      "storage": {
        "prefix": "Session",
        "items": [
          {
            "name": "Validators",
            "modifier": "Default",
            "type": {
              "Plain": "95"
            },
            "fallback": "0x00",
            "docs": [
              " The current set of validators."
            ]
          },
          {
            "name": "CurrentIndex",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " Current index of the session."
            ]
          },
          {
            "name": "QueuedChanged",
            "modifier": "Default",
            "type": {
              "Plain": "48"
            },
            "fallback": "0x00",
            "docs": [
              " True if the underlying economic identities or weighting behind the validators",
              " has changed in the queued validator set."
            ]
          },
          {
            "name": "QueuedKeys",
            "modifier": "Default",
            "type": {
              "Plain": "98"
            },
            "fallback": "0x00",
            "docs": [
              " The queued keys for the next session. When the next session begins, these keys",
              " will be used to determine the validator's session keys."
            ]
          },
          {
            "name": "DisabledValidators",
            "modifier": "Default",
            "type": {
              "Plain": "103"
            },
            "fallback": "0x00",
            "docs": [
              " Indices of disabled validators.",
              "",
              " The vec is always kept sorted so that we can find whether a given validator is",
              " disabled using binary search. It gets cleared when `on_session_ending` returns",
              " a new set of identities."
            ]
          },
          {
            "name": "NextKeys",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "0",
                "value": "100"
              }
            },
            "fallback": "0x00",
            "docs": [
              " The next session keys for a validator."
            ]
          },
          {
            "name": "KeyOwner",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "104",
                "value": "0"
              }
            },
            "fallback": "0x00",
            "docs": [
              " The owner of a key. The key is the `KeyTypeId` + the encoded key."
            ]
          }
        ]
      },
      "calls": {
        "type": "106"
      },
      "events": {
        "type": "30"
      },
      "constants": [],
      "errors": {
        "type": "107"
      },
      "index": "5"
    },
    {
      "name": "Aura",
      "storage": {
        "prefix": "Aura",
        "items": [
          {
            "name": "Authorities",
            "modifier": "Default",
            "type": {
              "Plain": "108"
            },
            "fallback": "0x00",
            "docs": [
              " The current authority set."
            ]
          },
          {
            "name": "CurrentSlot",
            "modifier": "Default",
            "type": {
              "Plain": "110"
            },
            "fallback": "0x0000000000000000",
            "docs": [
              " The current slot of this block.",
              "",
              " This will be set in `on_initialize`."
            ]
          }
        ]
      },
      "calls": null,
      "events": null,
      "constants": [],
      "errors": null,
      "index": "6"
    },
    {
      "name": "Grandpa",
      "storage": {
        "prefix": "Grandpa",
        "items": [
          {
            "name": "State",
            "modifier": "Default",
            "type": {
              "Plain": "111"
            },
            "fallback": "0x00",
            "docs": [
              " State of the current authority set."
            ]
          },
          {
            "name": "PendingChange",
            "modifier": "Optional",
            "type": {
              "Plain": "112"
            },
            "fallback": "0x00",
            "docs": [
              " Pending change: (signaled at, scheduled change)."
            ]
          },
          {
            "name": "NextForced",
            "modifier": "Optional",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00",
            "docs": [
              " next block number where we can force a change."
            ]
          },
          {
            "name": "Stalled",
            "modifier": "Optional",
            "type": {
              "Plain": "53"
            },
            "fallback": "0x00",
            "docs": [
              " `true` if we are currently stalled."
            ]
          },
          {
            "name": "CurrentSetId",
            "modifier": "Default",
            "type": {
              "Plain": "8"
            },
            "fallback": "0x0000000000000000",
            "docs": [
              " The number of changes (both in terms of keys and underlying economic responsibilities)",
              " in the \"set\" of Grandpa validators from genesis."
            ]
          },
          {
            "name": "SetIdSession",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "8",
                "value": "4"
              }
            },
            "fallback": "0x00",
            "docs": [
              " A mapping from grandpa set ID to the index of the *most recent* session for which its",
              " members were responsible.",
              "",
              " TWOX-NOTE: `SetId` is not under user control."
            ]
          }
        ]
      },
      "calls": {
        "type": "115"
      },
      "events": {
        "type": "31"
      },
      "constants": [
        {
          "name": "MaxAuthorities",
          "type": "4",
          "value": "0x20000000",
          "docs": [
            " Max Authorities in use"
          ]
        }
      ],
      "errors": {
        "type": "128"
      },
      "index": "7"
    },
    {
      "name": "TransactionPayment",
      "storage": {
        "prefix": "TransactionPayment",
        "items": [
          {
            "name": "NextFeeMultiplier",
            "modifier": "Default",
            "type": {
              "Plain": "129"
            },
            "fallback": "0x000064a7b3b6e00d0000000000000000",
            "docs": []
          },
          {
            "name": "StorageVersion",
            "modifier": "Default",
            "type": {
              "Plain": "130"
            },
            "fallback": "0x00",
            "docs": []
          }
        ]
      },
      "calls": null,
      "events": {
        "type": "36"
      },
      "constants": [
        {
          "name": "OperationalFeeMultiplier",
          "type": "2",
          "value": "0x05",
          "docs": [
            " A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
            " `priority`",
            "",
            " This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later",
            " added to a tip component in regular `priority` calculations.",
            " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
            " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
            "",
            " ```rust,ignore",
            " // For `Normal`",
            " let priority = priority_calc(tip);",
            "",
            " // For `Operational`",
            " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
            " let priority = priority_calc(tip + virtual_tip);",
            " ```",
            "",
            " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
            " sent with the transaction. So, not only does the transaction get a priority bump based",
            " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
            " transactions."
          ]
        }
      ],
      "errors": null,
      "index": "8"
    },
    {
      "name": "Sudo",
      "storage": {
        "prefix": "Sudo",
        "items": [
          {
            "name": "Key",
            "modifier": "Optional",
            "type": {
              "Plain": "0"
            },
            "fallback": "0x00",
            "docs": [
              " The `AccountId` of the sudo key."
            ]
          }
        ]
      },
      "calls": {
        "type": "131"
      },
      "events": {
        "type": "37"
      },
      "constants": [],
      "errors": {
        "type": "157"
      },
      "index": "9"
    },
    {
      "name": "Utility",
      "storage": null,
      "calls": {
        "type": "133"
      },
      "events": {
        "type": "41"
      },
      "constants": [
        {
          "name": "batched_calls_limit",
          "type": "4",
          "value": "0xaa2a0000",
          "docs": [
            " The limit on the number of batched calls."
          ]
        }
      ],
      "errors": {
        "type": "158"
      },
      "index": "10"
    },
    {
      "name": "ProviderPerms",
      "storage": {
        "prefix": "ProviderPerms",
        "items": [
          {
            "name": "PermissionStorage",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat",
                  "Blake2_128Concat"
                ],
                "key": "159",
                "value": "138"
              }
            },
            "fallback": "0x00",
            "docs": []
          }
        ]
      },
      "calls": {
        "type": "137"
      },
      "events": null,
      "constants": [],
      "errors": {
        "type": "160"
      },
      "index": "11"
    },
    {
      "name": "TenantPerms",
      "storage": {
        "prefix": "TenantPerms",
        "items": [
          {
            "name": "PermissionStorage",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat",
                  "Blake2_128Concat"
                ],
                "key": "159",
                "value": "140"
              }
            },
            "fallback": "0x00",
            "docs": []
          }
        ]
      },
      "calls": {
        "type": "139"
      },
      "events": null,
      "constants": [],
      "errors": {
        "type": "161"
      },
      "index": "12"
    },
    {
      "name": "Spaces",
      "storage": {
        "prefix": "Spaces",
        "items": [
          {
            "name": "Spaces",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "43",
                "value": "162"
              }
            },
            "fallback": "0x00",
            "docs": []
          }
        ]
      },
      "calls": {
        "type": "141"
      },
      "events": {
        "type": "42"
      },
      "constants": [],
      "errors": {
        "type": "163"
      },
      "index": "13"
    },
    {
      "name": "Tenants",
      "storage": {
        "prefix": "Tenants",
        "items": [
          {
            "name": "ProviderNodes",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat",
                  "Blake2_128Concat"
                ],
                "key": "164",
                "value": "165"
              }
            },
            "fallback": "0x00",
            "docs": []
          },
          {
            "name": "Tenants",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "43",
                "value": "166"
              }
            },
            "fallback": "0x00",
            "docs": []
          },
          {
            "name": "TenantKMSs",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat",
                  "Blake2_128Concat"
                ],
                "key": "164",
                "value": "167"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Stores the locators for the key management servers used by the key management server"
            ]
          }
        ]
      },
      "calls": {
        "type": "142"
      },
      "events": {
        "type": "45"
      },
      "constants": [],
      "errors": {
        "type": "168"
      },
      "index": "14"
    },
    {
      "name": "ContentObjectVersions",
      "storage": {
        "prefix": "ContentObjectVersions",
        "items": [
          {
            "name": "Versions",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat",
                  "Blake2_128Concat",
                  "Blake2_128Concat"
                ],
                "key": "169",
                "value": "170"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Stores version metadata per object"
            ]
          },
          {
            "name": "ContentObjectMetas",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat",
                  "Blake2_128Concat"
                ],
                "key": "164",
                "value": "171"
              }
            },
            "fallback": "0x0000000000",
            "docs": [
              " Storage of metadata associated with a versonable object. This returns the default",
              " value of ContentObjectMetadata if none exists."
            ]
          }
        ]
      },
      "calls": {
        "type": "144"
      },
      "events": {
        "type": "47"
      },
      "constants": [],
      "errors": {
        "type": "172"
      },
      "index": "15"
    }
  ],
  "extrinsic": {
    "type": "173",
    "version": "4",
    "signedExtensions": [
      {
        "identifier": "CheckNonZeroSender",
        "type": "175",
        "additionalSigned": "39"
      },
      {
        "identifier": "CheckSpecVersion",
        "type": "176",
        "additionalSigned": "4"
      },
      {
        "identifier": "CheckTxVersion",
        "type": "177",
        "additionalSigned": "4"
      },
      {
        "identifier": "CheckGenesis",
        "type": "178",
        "additionalSigned": "9"
      },
      {
        "identifier": "CheckMortality",
        "type": "179",
        "additionalSigned": "9"
      },
      {
        "identifier": "CheckNonce",
        "type": "181",
        "additionalSigned": "39"
      },
      {
        "identifier": "CheckWeight",
        "type": "182",
        "additionalSigned": "39"
      },
      {
        "identifier": "ChargeTransactionPayment",
        "type": "183",
        "additionalSigned": "39"
      }
    ]
  },
  "type": "184"
}
